%% Compile and read me!
\documentclass[a4paper,11pt]{article}
\pagestyle{empty}
\usepackage{color}
\usepackage{ifxetex}
\usepackage{algorithm}
\usepackage{algpseudocode}
\ifxetex\usepackage{fontspec}\setmainfont[Ligatures=TeX]{CMU Serif}
  \def\Hello{Алгоритм}
\else\usepackage[utf8]{inputenc}\usepackage[T2A]{fontenc}
  \def\Hello{Welcome! Привет!}
\fi

\begin{document}
\setlength{\parindent}{0cm}{\Huge \Hello} 
\bigskip
\section*{Обозначения}

Пусть:

Функция intersect(A, B) возвращает элементы, которые содерержатся одновременно и в массиве A, и в массиве B. 

Функция size(A) возвращает количество элементов, которые содержатся в массиве A.

Функция lcs(A, B) возвращает наибольшую общую подпоследовательность слов в A и B

sent - массив предложений.

sent[i].nGrams - массив n-грамм в i-ом предложении.

classes - массив классов

classes[i].nGrams - массив n-грамм в i-ом классе.

classes[i].sent - массив предложений в i-ом классе.


\begin{algorithm}
\caption{Поиск неточных повторов}\label{alg:Example}
\begin{algorithmic}[1]
 
\For{i = 1 to size(sent)}
    \State curSent = sent[i]
    \State bestOverlap = 0
    \State bestClass = NULL
    \For{j = 1 to size(classes)}
        \State curClass = classes[j]
        \State curIntersect = intersect(curSent.nGrams, curClass.nGrams)
        \State curOverlap = size(curIntersect) / size(curSent.nGrams)
        \If {curOverlap > bestOverlap}
            \State bestOverlap = curOverlap
            \State bestClass = curClass
        \EndIf
    \EndFor
    \If {bestOverlap < 0.5}
        \State Создать новый класс newClass
        \State newClass.nGrams += curSent.nGrams
        \State newClass.sent += curSent
    \Else
        \State bestClass.nGrams += curSent.nGrams
        \State bestClass.sent += curSent
    \EndIf
\EndFor 
 
\end{algorithmic}
\end{algorithm}


\end{document}



