========================= CLASS #5 =============================
(55) {9234} [9280]: Download and unpack the Jade distribution.
(78) {11776} [11828]: Download and unpack the stylesheet distribution .
*****************************************************************
========================= CLASS #6 =============================
(80) {12135} [12228]: If not, and the preceding test succeeded, something has gone wrong contact the maintainer .
(82) {12403} [12496]: If not, and the preceding test succeeded, something has gone wrong contact the maintainer .
*****************************************************************
========================= CLASS #11 =============================
(248) {38232} [38308]: The Specification The W3C technical recommendation that defines 1.0.
(249) {38309} [38386]: Namespaces in The W3C technical recommendation that defines namespaces.
*****************************************************************
========================= CLASS #14 =============================
(295) {43541} [43672]: Did you use any markup features of the that have been flagged as obsolete (to be removed at the next major version of DocBook)?
(364) {48694} [48734]: Did you use any processing instructions?
*****************************************************************
========================= CLASS #15 =============================
(296) {43673} [43691]: If so, which ones?
(314) {44725} [44743]: If so, which ones?
*****************************************************************
========================= CLASS #16 =============================
(303) {44047} [44102]: Did you use the supplied declaration or another one?
(311) {44540} [44573]: Did you use the SUBDOC feature?
*****************************************************************
========================= CLASS #17 =============================
(312) {44575} [44661]: If so, how did you manage the name spaces of their ID s, if you managed them at all?
(337) {46745} [46756]: If so, how?
*****************************************************************
========================= CLASS #18 =============================
(328) {45819} [45885]: If you used the Lang common attribute, why, and to what effect?
(329) {45886} [45953]: If you used the Remap common attribute, why, and to what effect?
(330) {45954} [46020]: If you used the Role common attribute, why, and to what effect?
*****************************************************************
========================= CLASS #19 =============================
(332) {46106} [46206]: What values did you give to the Label attribute and how are they to be interpreted for rendering?
(333) {46207} [46334]: What values did you give to the Mark and Override attributes for lists and how are they to be interpreted for rendering?
*****************************************************************
========================= CLASS #23 =============================
(467) {72461} [72569]: A copy of the license is included in the section entitled &quot;GNU Free Documentation License&quot;.
(2301) {339615} [339654]: A copy of the license is included in .
*****************************************************************
========================= CLASS #24 =============================
(472) {73262} [73375]: Version 2.0.14: Changes since version 2.0.12 (2005-04-18) I forgot to update the ChangeLog for version 2.0.13.
(475) {73537} [73650]: Version 2.0.12: Changes since version 2.0.10 (2004-05-19) I forgot to update the ChangeLog for version 2.0.11.
*****************************************************************
========================= CLASS #26 =============================
(474) {73430} [73536]: This change log is slightly abbreviated; there were hundreds of uninteresting changes to generated files.
(477) {73705} [73811]: This change log is slightly abbreviated; there were hundreds of uninteresting changes to generated files.
*****************************************************************
========================= CLASS #27 =============================
(496) {75663} [75696]: How to publish DocBook documents.
(523) {77799} [77832]: How to publish DocBook documents.
*****************************************************************
========================= CLASS #28 =============================
(528) {78223} [78265]: A reference guide to the DocBook elements.
(529) {78266} [78318]: A reference guide to the DocBook parameter entities.
*****************************************************************
========================= CLASS #30 =============================
(590) {85348} [85453]: Nevertheless, it&#39;s not unreasonable to do your authoring in and your online publishing in or .
(591) {85454} [85526]: By the same token, it&#39;s not unreasonable to do your authoring in .
*****************************************************************
========================= CLASS #34 =============================
(819) {118722} [118784]: The following sections describe the features of the prologue.
(872) {128346} [128409]: The following sections describe the features of the prologue.
*****************************************************************
========================= CLASS #35 =============================
(828) {120439} [120547]: This identifies the that will be used by the document and what the root element of the document will be.
(879) {129374} [129569]: elements root element root element document type declaration The document type declaration identifies the that will be used by the document and what the root element of the document will be.
*****************************************************************
========================= CLASS #36 =============================
(831) {121038} [121616]: An Internal Subset internal subset SGML document declarations It&#39;s also possible to provide additional declarations in a document by placing them in the document type declaration: &lt;!DOCTYPE book PUBLIC &quot;-//OASIS//DTD DocBook V3.1//EN&quot; [ &lt;!ENTITY nwalsh &quot;Norman Walsh&quot;&gt; &lt;!ENTITY chap1 SYSTEM &quot;chap1.sgm&quot;&gt; &lt;!ENTITY chap2 SYSTEM &quot;chap2.sgm&quot;&gt; ]&gt; external subset SGML document declarations public identifiers SGML system identifiers SGML These declarations form what is known as the internal subset .
(836) {122169} [122801]: The Document (or Root) Element elements root element root element placement Although comments and processing instructions may occur between the document type declaration and the root element, the root element usually immediately follows the document type declaration: &lt;!DOCTYPE book PUBLIC &quot;-//OASIS//DTD DocBook V3.1//EN&quot; [ &lt;!ENTITY nwalsh &quot;Norman Walsh&quot;&gt; &lt;!ENTITY chap1 SYSTEM &quot;chap1.sgm&quot;&gt; &lt;!ENTITY chap2 SYSTEM &quot;chap2.sgm&quot;&gt; ]&gt; &lt;book&gt; &amp;chap1; &amp;chap2; &lt;/book&gt; You cannot place the root element of the document in an external entity.
(884) {130477} [131227]: An Internal Subset declarations document type declaration XML document type declaration internal subset internal subset XML document type declarations XML document type declarations internal subset It&#39;s also possible to provide additional declarations in a document by placing them in the document type declaration: &lt;?xml version=&#39;1.0&#39;?&gt; &lt;!DOCTYPE book PUBLIC &quot;-//Norman Walsh//DTD DocBk XML V3.1.4/EN&quot; &quot;http://nwalsh.com/docbook/xml/3.1.4/db3xml.dtd&quot; [ &lt;!ENTITY nwalsh &quot;Norman Walsh&quot;&gt; &lt;!ENTITY chap1 SYSTEM &quot;chap1.sgm&quot;&gt; &lt;!ENTITY chap2 SYSTEM &quot;chap2.sgm&quot;&gt; ]&gt; These declarations form what is known as the internal subset.
(889) {131811} [132588]: The Document (or Root) Element root element elements root element Although comments and processing instructions may occur between the document type declaration and the root element, the root element usually immediately follows the document type declaration: &lt;?xml version=&#39;1.0&#39;?&gt; &lt;!DOCTYPE book PUBLIC &quot;-//Norman Walsh//DTD DocBk XML V3.1.4//EN&quot; &quot;http://nwalsh.com/docbook/xml/3.1.4/db3xml.dtd&quot; [ &lt;!ENTITY nwalsh &quot;Norman Walsh&quot;&gt; &lt;!ENTITY chap1 SYSTEM &quot;chap1.sgm&quot;&gt; &lt;!ENTITY chap2 SYSTEM &quot;chap2.sgm&quot;&gt; ]&gt; &lt;book&gt;...&lt;/book&gt; The important point is that the root element must be physically present immediately after the document type declaration.
*****************************************************************
========================= CLASS #37 =============================
(832) {121617} [121795]: The declarations stored in the file referenced by the public or system identifier in the DOCTYPE declaration is called the external subset and it is technically optional.
(885) {131228} [131403]: The declarations stored in the file referenced by the public or system identifier in the DOCTYPE declaration is called the external subset, which is technically optional.
*****************************************************************
========================= CLASS #38 =============================
(833) {121797} [121945]: It is legal to put the in the internal subset and to have no external subset, but for a as large as DocBook that wouldn&#39;t make much sense.
(886) {131405} [131554]: It is legal to put the in the internal subset and to have no external subset, but for a as large as DocBook, that would make very little sense.
*****************************************************************
========================= CLASS #39 =============================
(834) {121948} [122085]: parsing order The internal subset is parsed first and, if multiple declarations for an entity occur, the first declaration is used.
(887) {131557} [131726]: parsing order XML document declarations The internal subset is parsed first in and, if multiple declarations for an entity occur, the first declaration is used.
*****************************************************************
========================= CLASS #40 =============================
(835) {122086} [122168]: Declarations in the internal subset override declarations in the external subset.
(888) {131728} [131810]: Declarations in the internal subset override declarations in the external subset.
*****************************************************************
========================= CLASS #41 =============================
(837) {122802} [123032]: Typing an Document Emacs text editor vi text editor SGML text editors, entering through text editors SGML, entering If you are entering using a text editor such as Emacs or vi , there are a few things to keep in mind.
(891) {132663} [132808]: Typing an Document text editors If you are entering using a text editor such as Emacs or vi , there are a few things to keep in mind.
*****************************************************************
========================= CLASS #42 =============================
(840) {123200} [123274]: Using a structured text editor designed for hides most of these issues.
(892) {132810} [132884]: Using a structured text editor designed for hides most of these issues.
*****************************************************************
========================= CLASS #43 =============================
(847) {124390} [124628]: straight single quotes (attribute values) straight double quotes (attribute values) curly quotes (attribute values) When quoting attribute values, you can use either a straight single quote (&#39;), or a straight double quote (&quot;).
(896) {133206} [133354]: quotes attribute values When quoting attribute values, you can use either a straight single quote (&#39;), or a straight double quote (&quot;).
*****************************************************************
========================= CLASS #44 =============================
(848) {124630} [124695]: Don&#39;t use the curly quotes ( and ) in your editing tool.
(897) {133356} [133421]: Don&#39;t use the curly quotes ( and ) in your editing tool.
*****************************************************************
========================= CLASS #47 =============================
(899) {133535} [133556]: XML question marks (?
(914) {135650} [135667]: question marks (?
*****************************************************************
========================= CLASS #48 =============================
(900) {133556} [133675]: ), processing instructions Processing instructions in begin and end with a question mark: &lt;?pitarget data?&gt; .
(915) {135667} [135862]: ), processing instructions (XML) processing instructions XML documents XML processing instructions Processing instructions in begin and end with a question mark: &lt;?pitarget data?&gt; .
*****************************************************************
========================= CLASS #49 =============================
(913) {135535} [135647]: In , the trailing slash is not present, so some of our examples need slight revisions to be valid elements.
(916) {135864} [135984]: In , the trailing question mark is not present, so some of our examples need slight revisions to be valid elements.
*****************************************************************
========================= CLASS #50 =============================
(1082) {161855} [162002]: Inline elements are used to mark up data such as cross references, filenames, commands, options, subscripts and superscripts, and glossary terms.
(1135) {168837} [168886]: Inline elements are used to mark up running text.
*****************************************************************
========================= CLASS #51 =============================
(1087) {162511} [162559]: There are attributes to control the marks used.
(1089) {162613} [162670]: There are attributes to control the type of enumeration.
*****************************************************************
========================= CLASS #52 =============================
(1214) {173588} [173610]: Symbol element Token .
(1240) {174591} [174613]: Symbol element Token .
*****************************************************************
========================= CLASS #53 =============================
(1215) {173611} [173631]: Token element Type .
(1241) {174614} [174634]: Token element Type .
*****************************************************************
========================= CLASS #59 =============================
(1446) {216886} [217010]: The element in the FOSI that controls the presentation of specific elements is the e-i-c (element in context) element.
(1453) {217646} [217766]: The element in the XSL stylesheet that controls the presentation of specific elements is the xsl:template element.
*****************************************************************
========================= CLASS #60 =============================
(1533) {228206} [228301]: (attribute-string &quot; attr &quot; nd ) Returns the value of the attr attribute of nd .
(1534) {228304} [228410]: (inherited-attribute-string &quot; attr &quot; nd ) Returns the value of the attr attribute of nd .
*****************************************************************
========================= CLASS #64 =============================
(1644) {243493} [243552]: summarizes the language codes for the supported languages.
(1649) {244635} [244693]: summarizes the language codes for the supported languages.
*****************************************************************
========================= CLASS #66 =============================
(1844) {272957} [273050]: You generate HTML from your DocBook files by applying the HTML version of the stylesheets.
(1873) {276290} [276395]: You generate formatting objects from your DocBook files by applying the fo version of the stylesheets.
*****************************************************************
========================= CLASS #67 =============================
(1846) {273144} [273307]: That is the master stylesheet file that uses &lt;xsl:include&gt; to pull in the component files it needs to assemble a complete stylesheet for producing HTML.
(1875) {276485} [276662]: That is the master stylesheet file that uses &lt;xsl:include&gt; to pull in the component files it needs to assemble a complete stylesheet for producing formatting objects.
*****************************************************************
========================= CLASS #70 =============================
(2161) {318736} [318816]: This placeholder is controlled by the intermod.redecl.module marked section.
(2163) {318955} [319033]: This placeholder is controlled by the dbpool.redecl.module marked section.
(2165) {319168} [319246]: This placeholder is controlled by the dbhier.redecl.module marked section.
(2167) {319329} [319408]: This placeholder is controlled by the dbhier.redecl2.module marked section.
*****************************************************************
========================= CLASS #71 =============================
(2162) {318817} [318954]: rdbpool %rdbpool.mod parameter entity Inserted in the middle of dbpool.mod , between the *.class and *.mix entity declarations.
(2164) {319034} [319167]: rdbhier %rdbhier parameter entity Inserted in the middle of dbhier.mod , between the *.class and *.mix entity declarations.
*****************************************************************
========================= CLASS #72 =============================
(2248) {330568} [330991]: external subset external subset document type declaration external subset public identifiers external subset system identifiers external subset declarations document type declaration Element, attribute, and other declarations that compose (part of) a document type definition that are stored in an external entity, and referenced from a document&#39;s document type declaration using a public or system identifier.
(2262) {333224} [333504]: internal subset internal subset document type declaration internal subset declarations document type declaration Element, attribute, and other declarations that compose (part of) a document type definition that are stored in a document, within the document type declaration.
*****************************************************************
