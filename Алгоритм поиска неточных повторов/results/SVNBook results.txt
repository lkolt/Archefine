========================= CLASS #0 =============================
0: <?xml version="1.0" encoding="utf-8" ?> <plainxml>Subversion Quick-Start Guide If you&#39;re eager to get Subversion up and running (and you enjoy learning by experimentation), this appendix will show you how to create a repository, import code, and then check it back out again as a working copy.
12: to get Subversion.
*****************************************************************
========================= CLASS #4 =============================
4: The APR library provides all the interfaces that Subversion needs to function on different operating systems: disk access, network access, memory management, and so on.
6120: and so on.
*****************************************************************
========================= CLASS #12 =============================
13: Alternatively, you can build Subversion directly from source code, though it&#39;s not always an easy task.
2518: Fortunately, it&#39;s not the only way.
2637: First, it&#39;s not very safe.
2639: Second, it&#39;s not very flexible.
*****************************************************************
========================= CLASS #13 =============================
14: (If you&#39;re not experienced at building open source software packages, you&#39;re probably better off downloading a binary distribution instead!)
2898: (If you&#39;re not familiar with Subversion properties, see .)
3078: If you&#39;re feeling confused about exactly how merging works, you&#39;re not alone.
*****************************************************************
========================= CLASS #20 =============================
21: : $ svn checkout http://svn.apache.org/repos/asf/subversion/trunk subversion A subversion/HACKING A subversion/INSTALL A subversion/README A subversion/autogen.sh A subversion/build.conf The preceding command will create a working copy of the latest (unreleased) Subversion source code into a subdirectory named subversion in your current working directory.
2301: $ svn checkout http://svn.example.com/projects .
*****************************************************************
========================= CLASS #33 =============================
34: To begin, create a new repository: $ cd /var/svn $ svnadmin create repos $ ls repos conf/ dav/ db/ format hooks/ locks/ README.txt $ This command creates a Subversion repository in the directory /var/svn/repos , creating the repos directory itself if it doesn&#39;t already exist.
1465: But it doesn&#39;t stop there.
*****************************************************************
========================= CLASS #35 =============================
36: You won&#39;t see your versioned files if you peek inside.
5574: You won&#39;t be prompted anymore.
*****************************************************************
========================= CLASS #36 =============================
37: For more information about repository creation and maintenance, see .
151: For more information, see .
5181: For more information, see .
*****************************************************************
========================= CLASS #48 =============================
49: Once you have your tree of data ready to go, import it into the repository with the svn import command (see ): $ svn import /tmp/myproject file:///var/svn/repos/myproject \ -m &quot;initial import&quot; Adding /tmp/myproject/branches Adding /tmp/myproject/tags Adding /tmp/myproject/trunk Adding /tmp/myproject/trunk/foo.c Adding /tmp/myproject/trunk/bar.c Adding /tmp/myproject/trunk/Makefile Committed revision 1.
5482: character (see ).
*****************************************************************
========================= CLASS #55 =============================
56: Ask Subversion to check out a working copy of the myproject/trunk directory in the repository: $ svn checkout file:///var/svn/repos/myproject/trunk myproject A myproject/foo.c A myproject/bar.c A myproject/Makefile Checked out revision 1.
2303: Checked out revision 11.
*****************************************************************
========================= CLASS #66 =============================
67: It&#39;s essentially a list of differences between the two systems as viewed from 10,000 feet.
3387: It&#39;s almost too flexible.
*****************************************************************
========================= CLASS #84 =============================
85: For more details on this topic, see .
5475: For more details, see .
*****************************************************************
========================= CLASS #94 =============================
95: Let&#39;s talk more about that last point.
2623: Let&#39;s revisit the example from .
*****************************************************************
========================= CLASS #129 =============================
130: In the default short format, local modifications look like this: $ svn status M foo.c M bar/baz.c If you specify the --show-updates ( -u ) option, a longer output format is used: $ svn status -u M 1047 foo.c * 1045 faces.html * bloo.png M 1050 bar/baz.c Status against revision: 1066 In this case, two new columns appear.
1005: $ svn status ?
6528: $ svn status ?
*****************************************************************
========================= CLASS #134 =============================
135: For a more detailed discussion of svn status , including an explanation of the status codes shown in the previous example, see .
139: For a more detailed discussion of svn update , see .
*****************************************************************
========================= CLASS #144 =============================
146: That is, providing you don&#39;t run out of disk space before your checkout finishes.
1277: Unfortunately, you don&#39;t realize this yet.
*****************************************************************
========================= CLASS #150 =============================
153: Historically, this has caused problems, because CVS isn&#39;t doing enough.
2259: Unfortunately, the system isn&#39;t flawless.
*****************************************************************
========================= CLASS #156 =============================
159: See for more about conflict resolution in Subversion.
1003: See for more details.
3687: See for more information.
3802: See for more information.
6325: See for more information.
6668: See for more information.
6746: See for more information on properties.
6764: See for more information on hook scripts.
6941: See for more about sparse directories.
7064: See for more information.
7068: See for more information.
*****************************************************************
========================= CLASS #191 =============================
194: WebDAV and Autoversioning WebDAV is an extension to HTTP, and it is growing more and more popular as a standard for file sharing.
4787: protocol, which is an extension to HTTP 1.1.
*****************************************************************
========================= CLASS #232 =============================
235: A typical DeltaV server will reject an ignorant WebDAV client attempting to do a PUT to a file that&#39;s under version control.
2980: Yes, that&#39;s true.
*****************************************************************
========================= CLASS #245 =============================
248: A generic log message is automatically generated and attached to each revision.
5179: A generic log message is auto-generated and attached to each revision.
*****************************************************************
========================= CLASS #268 =============================
271: We&#39;ll cover some of the most popular programs with this kind of WebDAV support.
2520: We&#39;ll cover some of those supported operations in this section.
*****************************************************************
========================= CLASS #280 =============================
283: Coll: &gt; foobar 0 May 10 16:19 &gt; playwright.el 2864 May 4 16:18 &gt; proofbypoem.txt 1461 May 5 15:09 &gt; westcoast.jpg 66737 May 5 15:09 dav:/repos/&gt; put README Uploading README to `/repos/README&#39;: Progress: [=============================&gt;] 100.0% of 357 bytes succeeded.
284: dav:/repos/&gt; get proofbypoem.txt Downloading `/repos/proofbypoem.txt&#39; to proofbypoem.txt: Progress: [=============================&gt;] 100.0% of 1461 bytes succeeded.
*****************************************************************
========================= CLASS #350 =============================
354: Once you install davfs2, you can mount a WebDAV network share using the usual Linux mount command: $ mount.davfs http://host/repos /mnt/dav Version Control with Subversion [DRAFT] For Subversion 1.8 (Compiled from ) Ben Collins-Sussman Brian W. Fitzpatrick C. Michael Pilato Tatiana Apandi 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 Ben Collins-Sussman Brian W. Fitzpatrick C. Michael Pilato This work is licensed under the Creative Commons Attribution License.
6016: Copyright Copyright (c) 2002-2013 Ben Collins-Sussman, Brian W. Fitzpatrick, C. Michael Pilato.
6017: This work is licensed under the Creative Commons Attribution License.
*****************************************************************
========================= CLASS #351 =============================
355: To view a copy of this license, visit or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.
6018: To view a copy of this license, visit or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.
*****************************************************************
========================= CLASS #413 =============================
418: There are pros and cons to each version control approach.
980: There are pros and cons to performing URL-based operations.
4981: There are pros and cons to each approach.
*****************************************************************
========================= CLASS #452 =============================
457: svn svnversion svnlook svnadmin mod_dav_svn svnserve svndumpfilter svnsync svnrdump svnmucc svn The command-line client program svnversion A program for reporting the state (in terms of revisions of the items present) of a working copy svnlook A tool for directly inspecting a Subversion repository svnadmin A tool for creating, tweaking, or repairing a Subversion repository mod_dav_svn A plug-in module for the Apache HTTP Server, used to make your repository available to others over a network svnserve A custom standalone server program, runnable as a daemon process or invokable by SSH; another way to make your repository available to others over a network svndumpfilter A program for filtering Subversion repository dump streams svnsync A program for incrementally mirroring one repository to another over a network svnrdump A program for performing repository history dumps and loads over a network svnmucc A program for performing multiple repository URL-based operations in a single commit and without the use of a working copy What&#39;s New in Subversion Subversion history of The first edition of this book was published by O&#39;Reilly Media in 2004, shortly after Subversion had reached 1.0.
876: What&#39;s In a Name?
2606: What&#39;s a Branch?
3729: That&#39;s a social issue, though.
3975: That&#39;s where fsfs-reshard.py comes in.
4207: That&#39;s where svndumpfilter becomes useful.
*****************************************************************
========================= CLASS #559 =============================
564: In this section, we&#39;ll introduce some fairly high-level version control system components and concepts.
3698: In this section, we&#39;ll try to help you answer those questions.
4957: In this section, we&#39;ll recommend some specific configuration changes to consider.
*****************************************************************
========================= CLASS #578 =============================
584: The answer is found in the version control construct known as a working copy .
6116: The answer is simple.
*****************************************************************
========================= CLASS #594 =============================
600: If Harry saves his changes to the repository first, it&#39;s possible that (a few moments later) Sally could accidentally overwrite them with her own new version of the file.
638: Sally saves her changes to the repository first.
*****************************************************************
========================= CLASS #629 =============================
635: out of date Here&#39;s an example.
1137: Here&#39;s an example.
*****************************************************************
========================= CLASS #684 =============================
692: http://svn.example.com/svn/project http://svn.example.com:9834/repos Subversion repository URLs aren&#39;t limited to only the http:// variety.
1133: You aren&#39;t limited strictly to all-or-nothing options.
*****************************************************************
========================= CLASS #720 =============================
729: How the working copy works For each file in a working directory, Subversion records (among other things) two essential pieces of information: revisions working What revision your working file is based on (this is called the file&#39;s working revision ) A timestamp recording when the local copy was last updated by the repository Given this information, by talking to the repository, Subversion can tell which of the following four states a working file is in: Unchanged, and current The file is unchanged in the working directory, and no changes to that file have been committed to the repository since its working revision.
731: Locally changed, and current The file has been changed in the working directory, and no changes to that file have been committed to the repository since you last updated.
*****************************************************************
========================= CLASS #721 =============================
730: An svn commit of the file will do nothing, and an svn update of the file will do nothing.
735: An svn commit of the file will do nothing, and an svn update of the file will fold the latest changes into your working copy.
737: An svn commit of the file will fail with an out-of-date error.
*****************************************************************
========================= CLASS #723 =============================
733: Unchanged, and out of date The file has not been changed in the working directory, but it has been changed in the repository.
736: Locally changed, and out of date The file has been changed both in the working directory and in the repository.
*****************************************************************
========================= CLASS #727 =============================
740: Fundamental working copy interactions A typical Subversion repository often holds the files (or source code) for several projects; usually, each project is a subdirectory in the repository&#39;s filesystem tree.
2982: The original change still exists in the repository&#39;s history.
*****************************************************************
========================= CLASS #733 =============================
746: For example, if you check out /calc , you will get a working copy like this: $ svn checkout http://svn.example.com/repos/calc A calc/Makefile A calc/integer.c A calc/button.c Checked out revision 56.
2284: $ svn checkout http://svn.example.com/repos/calc A calc A calc/Makefile A calc/integer.c A calc/button.c Checked out revision 148.
*****************************************************************
========================= CLASS #740 =============================
753: svn subcommands commit committing To publish your changes, you can use Subversion&#39;s svn commit command: $ svn commit button.c -m &quot;Fixed a typo in button.c.&quot; Sending button.c Transmitting file data .
4330: Transmitting file data .
4333: Transmitting file data .
4336: Transmitting file data .
*****************************************************************
========================= CLASS #748 =============================
761: $ pwd /home/sally/calc $ ls -A Makefile button.c integer.c .svn/ $ svn update Updating &#39;.&#39;: U button.c Updated to revision 57.
1280: $ svn update Updating &#39;.&#39;: C code/bar.c A code/baz.c U Makefile Updated to revision 14.
2823: $ svn up Updating &#39;.&#39;: At revision 361.
3033: $ svn up Updating &#39;.&#39;: A real.c Updated to revision 402.
3406: Updated to revision 474.
6944: Updating &#39;ziptastic&#39;: At revision 43.
6947: Updated &#39;ziptastic&#39; to r43.
*****************************************************************
========================= CLASS #767 =============================
780: After the commit succeeds, many new users would expect the working copy to be entirely at revision 15, but that&#39;s not the case!
3084: That&#39;s not the case.
6772: And fortunately, that&#39;s not the case.
*****************************************************************
========================= CLASS #778 =============================
791: To examine your mixture of working revisions, use the svn status command with the --verbose ( -v ) option (see for more information).
1546: Simply supply the --verbose ( -v ) option.
7218: --verbose ( -v ) Be verbose.
*****************************************************************
========================= CLASS #813 =============================
826: But don&#39;t expect the examples in this chapter to work without the user having access to a Subversion repository.
2594: But don&#39;t stop here!
*****************************************************************
========================= CLASS #817 =============================
830: See for a detailed description of Subversion&#39;s handling of authentication and client credentials.
5008: See for a detailed description of the keyword substitution feature.
*****************************************************************
========================= CLASS #821 =============================
835: Type &#39;svn help &lt;subcommand&gt;&#39; for help on a specific subcommand.
3940: Type &#39;svnlook help &lt;subcommand&gt;&#39; for help on a specific subcommand.
*****************************************************************
========================= CLASS #822 =============================
836: Type &#39;svn --version&#39; to see the program version and RA modules or &#39;svn --version --quiet&#39; to see just the version number.
3931: Type &#39;svnadmin --version&#39; to see the program version and FS modules.
3941: Type &#39;svnlook --version&#39; to see the program version and FS modules.
3956: Type &#39;svndumpfilter --version&#39; to see the program version.
3962: Type &#39;svnrdump --version&#39; to see the program version and RA modules.
3969: Type &#39;svnsync --version&#39; to see the program version and RA modules.
*****************************************************************
========================= CLASS #842 =============================
856: We&#39;ll discuss svn import now and will discuss svn add later in this chapter when we review a typical day with Subversion.
903: We&#39;ll talk more about them later in this chapter.
*****************************************************************
========================= CLASS #859 =============================
873: Here are some examples: $ svn list file:///var/svn/single-project-repo trunk/ branches/ tags/ $ svn list file:///var/svn/multi-project-repo project-A/ project-B/ $ svn list file:///var/svn/multi-project-repo/project-A trunk/ branches/ tags/ $ We talk much more about tags and branches in .
1348: Here are some examples.
*****************************************************************
========================= CLASS #918 =============================
934: The svn commit command transmits your changes to the repository where, if they are accepted, they create the newest versions of all the things you modified.
1155: The svn commit command sends all of your changes to the repository.
*****************************************************************
========================= CLASS #942 =============================
958: Here is an overview of the five Subversion subcommands that you&#39;ll use most often to make tree changes: svn add FOO svn subcommands add Use this to schedule the file, directory, or symbolic link FOO to be added to the repository.
962: svn delete FOO svn subcommands delete Use this to schedule the file, directory, or symbolic link FOO to be deleted from the repository.
*****************************************************************
========================= CLASS #954 =============================
971: svn copy does not create intermediate directories unless you pass the --parents option.
974: svn move does not create intermediate directories unless you pass the --parents option.
*****************************************************************
========================= CLASS #987 =============================
1010: A item The file, directory, or symbolic link item has been scheduled for addition into the repository.
1014: D item The file, directory, or symbolic link item has been scheduled for deletion from the repository.
*****************************************************************
========================= CLASS #1000 =============================
1026: This tells you some very useful information because one of those items is also one that you have locally modified (the file README ), you&#39;ll need to update and get the server&#39;s changes for that file before you commit, or the repository will reject your commit for being out of date.
7004: It&#39;s unlikely that you&#39;ll need to run this command.
*****************************************************************
========================= CLASS #1007 =============================
1033: Here&#39;s an example: $ svn diff Index: bar.c =================================================================== --- bar.c (revision 3) +++ bar.c (working copy) @@ -1,7 +1,12 @@ +#include &lt;sys/types.h&gt; +#include &lt;sys/stat.h&gt; +#include &lt;unistd.h&gt; + +#include &lt;stdio.h&gt; int main(void) { - printf(&quot;Sixty-four slices of American Cheese...\n&quot;); + printf(&quot;Sixty-five slices of American Cheese...\n&quot;); return 0; } Index: README =================================================================== --- README (revision 3) +++ README (working copy) @@ -193,3 +193,4 @@ +Note to self: pick up laundry.
2785: =================================================================== --- .
3178: =================================================================== --- .
3185: =================================================================== --- .
*****************************************************************
========================= CLASS #1017 =============================
1043: For example, you might want Subversion to defer its difference calculation and display to the GNU diff program, asking that program to print local modifications made to the file foo.c in context diff format (another flavor of difference format) while ignoring changes made only to the case of the letters used in the file&#39;s contents: $ svn diff --diff-cmd /usr/bin/diff -x &quot;-i&quot; foo.c $ Fix Your Mistakes Suppose while viewing the output of svn diff you determine that all the changes you made to a particular file are mistakes.
2783: $ svn diff --depth empty .
3184: $ svn diff --depth empty Index: .
*****************************************************************
========================= CLASS #1034 =============================
1060: Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: The U (which stands for Updated ) and G (for merGed ) codes are no cause for concern; those files cleanly absorbed changes from the repository.
1119: Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C sandwich.txt Updated to revision 2.
1149: Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C sandwich.txt Updated to revision 2.
1582: Select: (p) postpone, (df) diff-full, (e) edit, (s) show all options: p C calc/button.c Updated to revision 143.
3151: Select: (p) postpone, (df) diff-full, (e) edit, (m) merge, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p $ svn st M .
3541: Select: (p) postpone, (df) diff-full, (e) edit, (m) merge, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: As you can see, svn merge has merged the changes required to make libcomplex 1.0.0 look like libcomplex 1.0.1 into our working copy.
3601: Select: (p) postpone, (df) diff-full, (e) edit, (m) merge, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: As you can see, svn merge has merged the requisite changes into our working copy, flagging a conflict where the vendor modified the same region of one of the files as we did during our customizations.
6821: Select: (p) postpone, (df) diff-full, (e) edit, (mc) mine-conflict, (tc) theirs-conflict, (s) show all options: p C foo.c Updated to revision 5.
*****************************************************************
========================= CLASS #1069 =============================
1095: After you&#39;ve edited the file, if you&#39;re satisfied with the changes you&#39;ve made, you can tell Subversion that the edited file is no longer in conflict by using the resolved command ( r ).
6881: The file is no longer locked.
*****************************************************************
========================= CLASS #1093 =============================
1120: Summary of conflicts: Text conflicts: 1 $ ls -1 sandwich.txt sandwich.txt.mine sandwich.txt.r1 sandwich.txt.r2 At this point, Subversion will not allow Sally to commit the file sandwich.txt until the three temporary files are removed: $ svn commit -m &quot;Add a few more things&quot; svn: E155015: Commit failed (details follow): svn: E155015: Aborting commit: &#39;/home/sally/svn-work/sandwich.txt&#39; remains in conflict If you&#39;ve postponed a conflict, you need to resolve the conflict before Subversion will allow you to commit your changes.
1150: Summary of conflicts: Text conflicts: 1 $ ls sandwich.
3150: Summary of conflicts: Text conflicts: 1 Conflict discovered in file &#39;Makefile&#39;.
*****************************************************************
========================= CLASS #1104 =============================
1131: There are other canned resolution types, too.
5084: There are other approaches.
*****************************************************************
========================= CLASS #1105 =============================
1132: See in for details.
2488: (See in for details.)
4189: See in for details.
*****************************************************************
========================= CLASS #1126 =============================
1158: If your log message is brief, you may wish to supply it on the command line using the --message ( -m ) option: $ svn commit -m &quot;Corrected number of cheese slices.&quot; Sending sandwich.txt Transmitting file data .
6490: ): $ svn commit -m &quot;added howto section.&quot; Sending a Transmitting file data .
*****************************************************************
========================= CLASS #1127 =============================
1159: Committed revision 3.
4331: Committed revision 3.
6491: Committed revision 3.
7503: Committed revision 3.
*****************************************************************
========================= CLASS #1145 =============================
1177: svn log will provide you with a record of who made changes to a file or directory, at what revision it changed, the time and date of that revision, and if it was provided the log message that accompanied the commit: $ svn log ------------------------------------------------------------------------ r3 | sally | 2008-05-15 23:09:28 -0500 (Thu, 15 May 2008) | 1 line Added include lines and corrected # of cheese slices.
1178: ------------------------------------------------------------------------ r2 | harry | 2008-05-14 18:43:15 -0500 (Wed, 14 May 2008) | 1 line Added main() methods.
1179: ------------------------------------------------------------------------ r1 | sally | 2008-05-10 19:50:31 -0500 (Sat, 10 May 2008) | 1 line Initial import ------------------------------------------------------------------------ Note that the log messages are printed in reverse chronological order by default.
1191: ------------------------------------------------------------------------ svn log also takes a --quiet ( -q ) option, which suppresses the body of the log message.
2477: In those situations, Subversion will ask whether you want to cache your credentials to disk in plaintext: $ svn checkout https://host.example.com:443/svn/private-repo ----------------------------------------------------------------------- ATTENTION!
2482: ----------------------------------------------------------------------- Store password unencrypted (yes/no)?
2707: ------------------------------------------------------------------------ Sally sees her own revision 344 change, but not the change you made in revision 343.
6615: Options Examples You can see the log messages for all the paths that changed in your working copy by running svn log from the top: $ svn log ------------------------------------------------------------------------ r20 | harry | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Tweak.
6616: ------------------------------------------------------------------------ r17 | sally | 2003-01-16 23:21:19 -0600 (Thu, 16 Jan 2003) | 2 lines Examine all log messages for a particular file in your working copy: $ svn log foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines.
6617: ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you don&#39;t have a working copy handy, you can log a URL: $ svn log http://svn.red-bean.com/repos/test/foo.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines.
6618: ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines If you want several distinct paths underneath the same URL, you can use the URL [PATH...] syntax: $ svn log http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Added defines.
6619: ------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines The --verbose ( -v ) option causes svn log to include information about the paths that were changed in each displayed revision.
6621: $ svn log -v http://svn.red-bean.com/repos/test/ foo.c bar.c ------------------------------------------------------------------------ r32 | sally | 2003-01-13 00:43:13 -0600 (Mon, 13 Jan 2003) | 1 line Changed paths: M /foo.c Added defines.
6622: ------------------------------------------------------------------------ r31 | harry | 2003-01-10 12:25:08 -0600 (Fri, 10 Jan 2003) | 1 line Changed paths: A /bar.c Added new file bar.c ------------------------------------------------------------------------ r28 | sally | 2003-01-07 21:48:33 -0600 (Tue, 07 Jan 2003) | 3 lines svn log uses just a handful of action codes, and they are similar to the ones the svn update command uses: A The item was added.
6631: To get log information for that revision, either run the log operation against the repository&#39;s root URL, or specify a path that you happen to know was changed in that revision: $ svn log -r 20 touched.txt ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change.
6634: $ svn log -r 20 touched.txt --diff ------------------------------------------------------------------------ r20 | sally | 2003-01-17 22:56:19 -0600 (Fri, 17 Jan 2003) | 1 line Made a change.
6646: For example: $ svn log --search sally --search harry https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1701 | sally | 2011-10-12 22:35:30 -0600 (Wed, 12 Oct 2011) | 1 line Add a reminder.
6647: ------------------------------------------------------------------------ r1564 | harry | 2011-10-09 22:35:30 -0600 (Sun, 09 Oct 2011) | 1 line Merge r1560 to the 1.0.x branch.
6649: For example: $ svn log --verbose --search sally --search-and /foo/bar https://svn.red-bean.com/repos/test ------------------------------------------------------------------------ r1555 | sally | 2011-07-15 22:33:14 -0600 (Fri, 15 Jul 2011) | 1 line Changed paths: M /foo/bar/src.c Typofix.
6650: ------------------------------------------------------------------------ r1530 | sally | 2011-07-13 07:24:11 -0600 (Wed, 13 Jul 2011) | 1 line Changed paths: M /foo/bar M /foo/build Fix up some svn:ignore properties.
*****************************************************************
========================= CLASS #1156 =============================
1190: So, in verbose mode, svn log will include a list of changed paths in a revision in its output: $ svn log -r 8 -v ------------------------------------------------------------------------ r8 | sally | 2008-05-21 13:19:25 -0500 (Wed, 21 May 2008) | 1 line Changed paths: M /trunk/code/foo.c M /trunk/code/bar.h A /trunk/code/doc/README Frozzled the sub-space winch.
1194: After working with Subversion for a bit, most users will come across something like this: $ svn log -r 2 ------------------------------------------------------------------------ $ At first glance, this seems like an error.
1288: $ svn log -r14 ^/trunk ------------------------------------------------------------------------ r14 | harry | 2011-09-06 10:38:17 -0400 (Tue, 06 Sep 2011) | 1 line Changed paths: M /Makefile D /code/bar.c A /code/baz.c (from /code/bar.c:13) Rename bar.c to baz.c, and adjust Makefile accordingly.
1289: ------------------------------------------------------------------------ $ svn info shows the URLs of the items involved in the conflict.
2698: ------------------------------------------------------------------------ r154 | sally | 2013-01-30 04:20:03 -0500 (Wed, 30 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: changed a docstring.
2699: ------------------------------------------------------------------------ ------------------------------------------------------------------------ r113 | sally | 2013-01-26 15:50:21 -0500 (Sat, 26 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: Revise the fooplus API.
2700: ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) | 1 line Changed paths: A /calc/trunk/Makefile A /calc/trunk/README A /calc/trunk/doc/INSTALL A /calc/trunk/src/button.c A /calc/trunk/src/integer.c A /calc/trunk/src/main.c A /calc/trunk/src/real.c Initial trunk code import for calc project.
2704: ------------------------------------------------------------------------ r154 | sally | 2013-01-30 04:20:03 -0500 (Wed, 30 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: changed a docstring.
2705: ------------------------------------------------------------------------ ------------------------------------------------------------------------ r113 | sally | 2013-01-26 15:50:21 -0500 (Sat, 26 Jan 2013) | 2 lines Changed paths: M /calc/trunk/src/integer.c * integer.c: Revise the fooplus API.
2706: ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) | 1 line Changed paths: A /calc/trunk/Makefile A /calc/trunk/README A /calc/trunk/doc/INSTALL A /calc/trunk/src/button.c A /calc/trunk/src/integer.c A /calc/trunk/src/main.c A /calc/trunk/src/real.c Initial trunk code import for calc project.
2774: You can find the latter with the svn log command with the -r set to HEAD : $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r340:351 U doc/INSTALL U src/real.c U src/button.c U Makefile After any conflicts have been resolved, you can commit the merged changes to your branch.
2779: Once you know your starting revision, you can perform another sync merge: $ svn log -q -rHEAD http://svn.example.com/repos/calc/trunk ------------------------------------------------------------------------ r959 | sally | 2013-03-5 7:30:21 -0500 (Tue, 05 Mar 2013) ------------------------------------------------------------------------ $ svn merge http://svn.example.com/repos/calc/trunk -r351:959 After running the prior example, your branch working copy now contains new local modifications, and these edits are duplications of all of the changes that have happened on the trunk since you first created your branch: $ svn status M .
3005: $ cd calc/trunk $ svn log -v --limit 3 ------------------------------------------------------------------------ r401 | sally | 2013-02-19 23:15:44 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/main.c Follow-up to r400: Fix typos in help text.
3006: ------------------------------------------------------------------------ r400 | bill | 2013-02-19 20:55:08 -0500 (Tue, 19 Feb 2013) | 4 lines Changed paths: M /calc/trunk/src/main.c D /calc/trunk/src/real.c * calc/trunk/src/main.c: Update help text.
3008: ------------------------------------------------------------------------ r399 | sally | 2013-02-19 20:05:14 -0500 (Tue, 19 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/button.c M /calc/trunk/src/integer.c M /calc/trunk/src/main.c M /calc/trunk/src/real.c Undoing erroneous change committed in r392.
3046: ------------------------------------------------------------------------ At the water cooler, you get word that Sally made an interesting change to main.c on the trunk.
3177: ------------------------------------------------------------------------ Because revision 465 was a reintegrate merge we know that mergeinfo was recorded describing the merge: $ svn diff ^/paint/trunk --depth empty -c465 Index: .
3208: For example, if you were to ask svn log about the history of your feature branch, it would show exactly every revision that ever affected the branch: $ cd my-calc-branch $ svn log -q ------------------------------------------------------------------------ r461 | user | 2013-02-25 05:57:48 -0500 (Mon, 25 Feb 2013) ------------------------------------------------------------------------ r379 | user | 2013-02-18 10:56:35 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ r378 | user | 2013-02-18 09:48:28 -0500 (Mon, 18 Feb 2013) ------------------------------------------------------------------------ ------------------------------------------------------------------------ r8 | sally | 2013-01-17 16:55:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r7 | bill | 2013-01-17 16:49:36 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ r3 | bill | 2013-01-17 09:07:04 -0500 (Thu, 17 Jan 2013) ------------------------------------------------------------------------ But is this really an accurate picture of all the changes that happened on the branch?
3210: If you look at one of these logs in detail, the multiple trunk changesets that comprised the branch change are nowhere to be seen: $ svn log ^/calc/branches/my-calc-branch -r352 -v ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch.
3215: $ svn log ^/calc/branches/my-calc-branch -r352 -v -g ------------------------------------------------------------------------ r352 | user | 2013-02-16 09:35:18 -0500 (Sat, 16 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch M /calc/branches/my-calc-branch/Makefile M /calc/branches/my-calc-branch/doc/INSTALL M /calc/branches/my-calc-branch/src/button.c M /calc/branches/my-calc-branch/src/real.c Sync latest trunk changes to my-calc-branch.
3216: ------------------------------------------------------------------------ r351 | sally | 2013-02-16 08:04:22 -0500 (Sat, 16 Feb 2013) | 2 lines Changed paths: M /calc/trunk/src/real.c Merged via: r352 Trunk work on calc project.
3217: ------------------------------------------------------------------------ ------------------------------------------------------------------------ r345 | sally | 2013-02-15 16:51:17 -0500 (Fri, 15 Feb 2013) | 2 lines Changed paths: M /calc/trunk/Makefile M /calc/trunk/src/integer.c Merged via: r352 Trunk work on calc project.
3258: Meanwhile, back on /calc/trunk , Sally has committed some improvements of her own to integer.c in r472: $ svn log -v -r472 ^/calc/trunk ------------------------------------------------------------------------ r472 | sally | 2013-02-26 07:05:18 -0500 (Tue, 26 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Trunk work on integer.c.
6637: ------------------------------------------------------------------------ $ As with svn diff , you may also make use of many of the various options which control the way the difference is generated, including --depth , --diff-cmd , and --extensions ( -x ).
6648: ------------------------------------------------------------------------ $ Using --search with --search-and options will show log messages that match the combined pattern from both options.
6651: ------------------------------------------------------------------------ $ --search and --search-and options does not actually perform a search.
*****************************************************************
========================= CLASS #1164 =============================
1200: When you invoke svn log with the --diff option, Subversion will append to each revision log chunk in the log report a diff -style difference report.
6633: Simply invoke svn log with the --diff option to trigger this output mode.
*****************************************************************
========================= CLASS #1181 =============================
1217: As such, if you attempt to run the command on a file that Subversion has determined is not human-readable (per the file&#39;s svn:mime-type property see for details), you&#39;ll get an error message.
5966: Print an error message.
*****************************************************************
========================= CLASS #1185 =============================
1221: That&#39;s okay the Subversion developers anticipated as much, so those particular command aliases work, too!
2451: That&#39;s terrible!
*****************************************************************
========================= CLASS #1188 =============================
1224: The svn list command with no arguments defaults to the repository URL of the current working directory, not the local working copy directory.
6589: , meaning the repository URL of the current working copy directory.
*****************************************************************
========================= CLASS #1190 =============================
1226: Fetching Older Repository Snapshots In addition to all of the previous commands, you can use the --revision ( -r ) option with svn update to take an entire working copy back in time : See?
1232: As with svn update , you can provide the --revision ( -r ) option.
*****************************************************************
========================= CLASS #1198 =============================
1235: $ svn checkout http://svn.example.com/svn/repo/trunk@1729 trunk-1729 # Checkout the current trunk as it looked in r1729.
1239: $ svn export http://svn.example.com/svn/repo/trunk@1729 trunk-1729 # Export the current trunk as it looked in r1729.
*****************************************************************
========================= CLASS #1227 =============================
1265: If you were still working on these files, those modifications may need to be applied to the files at their new location.
4497: Users may need to be notified.
*****************************************************************
========================= CLASS #1239 =============================
1278: As it turns out, you are busy in your working copy composing a different set of changes, some of which also involve modifications to bar.c : $ svn diff Index: code/foo.c =================================================================== --- code/foo.c (revision 13) +++ code/foo.c (working copy) @@ -3,5 +3,5 @@ int main(int argc, char *argv[]) { printf(&quot;I don&#39;t like being moved around!\n%s&quot;, bar()); - return 0; + return 1; } Index: code/bar.c =================================================================== --- code/bar.c (revision 13) +++ code/bar.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\n&quot;; + return &quot;Well, I do like being moved around!\n&quot;; } $ You first realize that someone else has changed bar.c when your own commit attempt fails: $ svn commit -m &quot;Small fixes&quot; Sending code/bar.c svn: E155011: Commit failed (details follow): svn: E155011: File &#39;/home/svn/project/code/bar.c&#39; is out of date svn: E160013: File not found: transaction &#39;14-e&#39;, path &#39;/code/bar.c&#39; $ At this point, you need to run svn update .
1305: $ svn diff code/bar.c &gt; PATCHFILE $ cat PATCHFILE Index: code/bar.c =================================================================== --- code/bar.c (working copy) +++ code/bar.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\n&quot;; + return &quot;Well, I do like being moved around!\n&quot;; } $ ### Edit PATCHFILE to refer to code/baz.c instead of code/bar.c $ cat PATCHFILE Index: code/baz.c =================================================================== --- code/baz.c (working copy) +++ code/baz.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\n&quot;; + return &quot;Well, I do like being moved around!\n&quot;; } $ svn patch PATCHFILE U code/baz.c $ Now that the changes you originally made to bar.c have been successfully reproduced in baz.c , you can delete bar.c and resolve the conflict, instructing the resolution logic to accept what is currently in the working copy as the desired result.
1306: $ svn delete --force code/bar.c D code/bar.c $ svn resolve --accept=working code/bar.c Resolved conflicted state of &#39;code/bar.c&#39; $ svn status M code/foo.c M code/baz.c $ svn diff Index: code/foo.c =================================================================== --- code/foo.c (revision 14) +++ code/foo.c (working copy) @@ -3,5 +3,5 @@ int main(int argc, char *argv[]) { printf(&quot;I don&#39;t like being moved around!\n%s&quot;, bar()); - return 0; + return 1; } Index: code/baz.c =================================================================== --- code/baz.c (revision 14) +++ code/baz.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\n&quot;; + return &quot;Well, I do like being moved around!\n&quot;; } $ But what if you do not agree with the move?
1309: Since bar.c is already scheduled for re-addition, there is nothing else left to do, and the conflict can be marked resolved: $ svn delete --force code/baz.c D code/baz.c $ svn resolve --accept=working code/bar.c Resolved conflicted state of &#39;code/bar.c&#39; $ svn status M code/foo.c A + code/bar.c D code/baz.c M Makefile $ svn diff Index: code/foo.c =================================================================== --- code/foo.c (revision 14) +++ code/foo.c (working copy) @@ -3,5 +3,5 @@ int main(int argc, char *argv[]) { printf(&quot;I don&#39;t like being moved around!\n%s&quot;, bar()); - return 0; + return 1; } Index: code/bar.c =================================================================== --- code/bar.c (revision 14) +++ code/bar.c (working copy) @@ -1,4 +1,4 @@ const char *bar(void) { - return &quot;Me neither!\n&quot;; + return &quot;Well, I do like being moved around!\n&quot;; } Index: code/baz.c =================================================================== --- code/baz.c (revision 14) +++ code/baz.c (working copy) @@ -1,4 +0,0 @@ -const char *bar(void) -{ - return &quot;Me neither!\n&quot;; -} Index: Makefile =================================================================== --- Makefile (revision 14) +++ Makefile (working copy) @@ -1,2 +1,2 @@ foo: - $(CC) -o $@ code/foo.c code/baz.c + $(CC) -o $@ code/foo.c code/bar.c You&#39;ve now resolved your first tree conflict!
*****************************************************************
========================= CLASS #1241 =============================
1281: Summary of conflicts: Tree conflicts: 1 $ In its output, svn update signifies tree conflicts using a capital C in the fourth output column.
3137: Summary of conflicts: Tree conflicts: 5 $ svn st M .
3262: Summary of conflicts: Tree conflicts: 1 $ svn st M .
*****************************************************************
========================= CLASS #1326 =============================
1372: The thing you deleted and the thing you later added aren&#39;t the same thing.
1393: And no, they aren&#39;t the same street.
*****************************************************************
========================= CLASS #1340 =============================
1386: It&#39;s a nice story, really, but it doesn&#39;t end there.
3634: It&#39;s a special sort of branch.
*****************************************************************
========================= CLASS #1360 =============================
1407: Here&#39;s an example of such an invocation: $ svn command -r OPERATIVE-REV item@ PEG-REV If OPERATIVE-REV is older than PEG-REV , the algorithm is as follows: Locate item in the revision identified by PEG-REV .
1414: So the algorithm is a little different: Locate item in the revision identified by OPERATIVE-REV .
*****************************************************************
========================= CLASS #1361 =============================
1408: There can be only one such object.
1415: There can be only one such object.
*****************************************************************
========================= CLASS #1362 =============================
1409: Trace the object&#39;s history backwards (through any possible renames) to its ancestor in the revision OPERATIVE-REV .
1416: Trace the object&#39;s history backward (through any possible renames) to its ancestor in the revision PEG-REV .
*****************************************************************
========================= CLASS #1366 =============================
1413: And that&#39;s not all Subversion doesn&#39;t store enough information to performantly trace an object&#39;s history forward, anyway.
5659: And that&#39;s where things remain today.
5664: And that&#39;s where things get unintuitive for most users.
*****************************************************************
========================= CLASS #1381 =============================
1431: To find out how the current IDEA file looked in that old revision, you run: $ svn cat -r 1 concept/IDEA svn: E195012: Unable to find repository location for &#39;concept/IDEA&#39; in revision 1 Of course, in this example, the current IDEA file didn&#39;t exist yet in revision 1, so Subversion gives an error.
1433: The expanded notation is: $ svn cat -r 1 concept/IDEA@BASE svn: E195012: Unable to find repository location for &#39;concept/IDEA&#39; in revision 1 And when executed, it has the expected results.
*****************************************************************
========================= CLASS #1391 =============================
1442: $ svn cat concept/IDEA@1 The idea behind this project is to come up with a piece of software that can frab a naggily wort.
1451: $ svn cat -r 1 frabnaggilywort/IDEA@HEAD The idea behind this project is to come up with a piece of software that can frab a naggily wort.
1458: +The idea behind this project is to come up with a piece of +client-server software that can remotely frab a naggily wort.
*****************************************************************
========================= CLASS #1392 =============================
1443: Frabbing naggily worts is tricky business, and doing it incorrectly can have serious ramifications, so we need to employ over-the-top input validation and data verification mechanisms.
1452: Frabbing naggily worts is tricky business, and doing it incorrectly can have serious ramifications, so we need to employ over-the-top input validation and data verification mechanisms.
1457: Frabbing naggily worts is tricky -business, and doing it incorrectly can have serious ramifications, so -we need to employ over-the-top input validation and data verification -mechanisms.
1459: +Frabbing naggily worts is tricky business, and doing it incorrectly +can have serious ramifications, so we need to employ over-the-top +input validation and data verification mechanisms.
*****************************************************************
========================= CLASS #1461 =============================
1519: Notice the presence of the custom revision property testresults in the following output: $ svn log --with-all-revprops --xml lib/crit_bits.c &lt;?xml version=&quot;1.0&quot;?&gt; &lt;log&gt; &lt;logentry revision=&quot;912&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2011-07-29T14:47:41.169894Z&lt;/date&gt; &lt;msg&gt;Fix up the last remaining known regression bug.&lt;/msg&gt; &lt;revprops&gt; &lt;property name=&quot;testresults&quot;&gt;all passing&lt;/property&gt; &lt;/revprops&gt; &lt;/logentry&gt; $ Trying to find a custom versioned property is painful, too, and often involves a recursive svn propget across an entire working copy.
6432: 3 sally If you use the --xml option, you can get XML output describing the blame annotations, but not the contents of the lines themselves: $ svn blame --xml http://svn.red-bean.com/repos/test/readme.txt &lt;?xml version=&quot;1.0&quot;?&gt; &lt;blame&gt; &lt;target path=&quot;readme.txt&quot;&gt; &lt;entry line-number=&quot;1&quot;&gt; &lt;commit revision=&quot;3&quot;&gt; &lt;author&gt;sally&lt;/author&gt; &lt;date&gt;2008-05-25T19:12:31.428953Z&lt;/date&gt; &lt;/commit&gt; &lt;/entry&gt; &lt;entry line-number=&quot;2&quot;&gt; &lt;commit revision=&quot;5&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-05-29T13:26:12.293121Z&lt;/date&gt; &lt;/commit&gt; &lt;/entry&gt; &lt;entry line-number=&quot;3&quot;&gt; &lt;/entry&gt; &lt;/target&gt; &lt;/blame&gt; $ svn subcommands cat svn cat Output the contents of the specified files or URLs.
6753: &lt;?xml version=&quot;1.0&quot;?&gt; &lt;properties&gt; &lt;target path=&quot;&quot;&gt; &lt;property name=&quot;svn:ignore&quot;&gt;*.o &lt;/property&gt; &lt;/target&gt; &lt;/properties&gt; svn subcommands proplist svn proplist (plist, pl) List all properties.
6895: The most information you can get out of the status subcommand is as follows: $ svn status -u -v wc M 965 938 sally wc/bar.c * 965 922 harry wc/foo.c A + 965 687 harry wc/qax.c 965 687 harry wc/zig.c Status against revision: 981 Lastly, you can get svn status output in XML format with the --xml option: $ svn status --xml wc &lt;?xml version=&quot;1.0&quot;?&gt; &lt;status&gt; &lt;target path=&quot;wc&quot;&gt; &lt;entry path=&quot;qax.c&quot;&gt; &lt;wc-status props=&quot;none&quot; item=&quot;added&quot; revision=&quot;0&quot;&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;entry path=&quot;bar.c&quot;&gt; &lt;wc-status props=&quot;normal&quot; item=&quot;modified&quot; revision=&quot;965&quot;&gt; &lt;commit revision=&quot;965&quot;&gt; &lt;author&gt;sally&lt;/author&gt; &lt;date&gt;2008-05-28T06:35:53.048870Z&lt;/date&gt; &lt;/commit&gt; &lt;/wc-status&gt; &lt;/entry&gt; &lt;/target&gt; &lt;/status&gt; For many more examples of svn status , see .
*****************************************************************
========================= CLASS #1468 =============================
1526: For properties with short, human-readable values, perhaps the simplest way to add a new property is to specify the property name and value on the command line of the svn propset subcommand: $ svn propset copyright &#39;(c) 2006 Red-Bean Software&#39; calc/button.c property &#39;copyright&#39; set on &#39;calc/button.c&#39; $ But we&#39;ve been touting the flexibility that Subversion offers for your property values.
1540: For example, we could have done the following: $ svn propset copyright &#39;(c) 2006 Red-Bean Software&#39; calc/* property &#39;copyright&#39; set on &#39;calc/Makefile&#39; property &#39;copyright&#39; set on &#39;calc/button.c&#39; property &#39;copyright&#39; set on &#39;calc/integer.c&#39; $ All of this property adding and editing isn&#39;t really very useful if you can&#39;t easily get the stored property value.
*****************************************************************
========================= CLASS #1485 =============================
1545: $ svn proplist calc/button.c Properties on &#39;calc/button.c&#39;: copyright license $ svn propget copyright calc/button.c (c) 2006 Red-Bean Software There&#39;s even a variation of the proplist command that will list both the name and the value for all of the properties.
1547: $ svn proplist -v calc/button.c Properties on &#39;calc/button.c&#39;: copyright (c) 2006 Red-Bean Software license ================================================================ Copyright (c) 2006 Red-Bean Software.
1555: $ svn proplist -v calc/button.c Properties on &#39;calc/button.c&#39;: copyright (c) 2006 Red-Bean Software $ Remember those unversioned revision properties?
*****************************************************************
========================= CLASS #1491 =============================
1553: For example, this command will not yield the desired effect: $ svn propset license &quot;&quot; calc/button.c property &#39;license&#39; set on &#39;calc/button.c&#39; $ svn proplist -v calc/button.c Properties on &#39;calc/button.c&#39;: copyright (c) 2006 Red-Bean Software license $ You need to use the propdel subcommand to delete properties altogether.
1554: The syntax is similar to the other property commands: $ svn propdel license calc/button.c property &#39;license&#39; deleted from &#39;calc/button.c&#39;.
*****************************************************************
========================= CLASS #1517 =============================
1581: $ svn update calc Updating &#39;calc&#39;: M calc/Makefile.in Conflict for property &#39;linecount&#39; discovered on &#39;calc/button.c&#39;.
6945: Summary of updates: Updated &#39;calc&#39; to r394.
*****************************************************************
========================= CLASS #1546 =============================
1611: Let&#39;s look at an example of how this works.
1671: Let&#39;s look at an example.
6805: Let&#39;s look at one final relocation opportunity.
*****************************************************************
========================= CLASS #1549 =============================
1614: The parent&#39;s properties are called out as &quot;inherited&quot;: $ svn pg svn:auto-props --verbose --show-inherited-props site Inherited properties on &#39;site&#39;, from &#39;.&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Properties on &#39;site&#39;: svn:auto-props *.html = svn:eol-style=native In the prior examples the root of the working copy corresponds to the root of the repository, but properties can also be inherited from outside the working copy when this is not the case.
1981: %R The URL to the root of the repository.
*****************************************************************
========================= CLASS #1572 =============================
1637: (See later in this chapter for more about this property.)
3765: See later in this chapter for more about Berkeley DB logfiles.
4408: See later in this chapter for more about this.
6737: See later in this chapter.
*****************************************************************
========================= CLASS #1598 =============================
1663: Using the svn propget subcommand with the --show-inherited-props option we see that this is indeed the case: $ svn propget svn:auto-props --show-inherited-props -v calc Inherited properties on &#39;calc&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Unlike the svn:global-ignores property and its analogous runtime configuration global-ignores , which are combined, the svn:auto-props property overrides the auto-props runtime configuration if it defines an auto-prop for the same pattern as the runtime configuration.
1675: calc/editor.py Let&#39;s check what svn:auto-props apply to calc : $ svn propget svn:auto-props -v --show-inherited-props calc Inherited properties on &#39;calc&#39;, from &#39;http://svn.example.com/repos&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:eol-style=native *.h = svn:eol-style=native Inherited properties on &#39;calc&#39;, from &#39;.&#39;: svn:auto-props *.py = svn:eol-style=native *.c = svn:keywords=Author Date Id Rev URL When we add these three files what auto-props do we expect?
*****************************************************************
========================= CLASS #1607 =============================
1676: We add the trio to version control and then check: $ svn add calc --force A calc/data-binding.cpp A calc/data.c A calc/editor.py The file data-binding.cpp has only one matching pattern, *.cpp = svn:eol-style=CR in the runtime configuration, so obviously the svn:eol-style property is set to CR : $ svn proplist -v calc/data-binding.cpp Properties on &#39;calc/data-binding.cpp&#39;: svn:eol-style CR The file editor.py matches a single pattern in runtime config and both of the svn:auto-props properties, but by the hierarchy described above, the property explicitly set on calc , *.py = svn:eol-style=native , takes precedence.
1677: So the svn:eol-style property is set to native: : $ svn proplist -v calc/editor.py Properties on &#39;calc/editor.py&#39;: svn:eol-style native The file data.c also matches patterns in the runtime config and both of the inherited svn:auto-props properties.
*****************************************************************
========================= CLASS #1624 =============================
1696: svn:ignore If present on a directory, the value is a list of unversioned file patterns to be ignored by svn status and other subcommands.
1698: svn:global-ignores If present on a directory, the value is a list of unversioned file patterns to be ignored by svn status and other subcommands.
*****************************************************************
========================= CLASS #1634 =============================
1713: See for details, but you should never edit this property unless you really know what you&#39;re doing.
1783: See for details.
5210: See for details.
5453: See for details.
5456: See for details.
5934: See for details.
6350: See for details.
6681: See for details.
6760: See for details.
7410: See for details.
*****************************************************************
========================= CLASS #1646 =============================
1726: svn:rdump-lock Used to temporarily enforce mutually exclusive access to the repository by svnrdump load .
1737: svn:sync-lock Used to temporarily enforce mutually exclusive access to the repository by svnsync mirroring operations.
*****************************************************************
========================= CLASS #1647 =============================
1727: This property is generally only observed when such an operation is active or when an svnrdump command failed to cleanly disconnect from the repository.
1738: This property is generally only observed when such an operation is active or when an svnsync command failed to cleanly disconnect from the repository.
*****************************************************************
========================= CLASS #1648 =============================
1728: (This property is only relevant when it appears on revision 0.)
1730: (This property is only relevant when it appears on revision 0.)
1732: (This property is only relevant when it appears on revision 0.)
1734: (This property is only relevant when it appears on revision 0.)
1736: (This property is only relevant when it appears on revision 0.)
1739: (This property is only relevant when it appears on revision 0.)
*****************************************************************
========================= CLASS #1650 =============================
1731: svn:sync-from-uuid Contains the UUID of the repository of which this repository has been initialized as a mirror by the svnsync tool.
1733: svn:sync-from-url Contains the URL of the repository directory of which this repository has been initialized as a mirror by the svnsync tool.
*****************************************************************
========================= CLASS #1735 =============================
1824: CRLF This causes the file to contain CRLF sequences for EOL markers, regardless of the operating system in use.
1825: LF This causes the file to contain LF characters for EOL markers, regardless of the operating system in use.
1826: CR This causes the file to contain CR characters for EOL markers, regardless of the operating system in use.
*****************************************************************
========================= CLASS #1758 =============================
1850: Matches any single character * Matches any string of characters, including the empty string [ Begins a character class definition terminated by ] , used for matching a subset of characters You can see this same pattern matching behavior at a Unix shell prompt.
6368: Matches any single character.
6642: Matches any single character.
*****************************************************************
========================= CLASS #1832 =============================
1929: Now, let&#39;s enable substitution of the LastChangedDate keyword.
5971: Now let&#39;s switch languages.
*****************************************************************
========================= CLASS #1849 =============================
1946: It may also be specified as LastChangedDate .
1949: It may also be specified as LastChangedRevision or Rev .
1951: It may also be specified as LastChangedBy .
*****************************************************************
========================= CLASS #1851 =============================
1948: Revision This keyword describes the last known revision in which this file changed in the repository, and looks something like $Revision: 144 $ .
1979: %r The last known revision in which this file changed in the repository.
*****************************************************************
========================= CLASS #1856 =============================
1955: Its substitution looks something like $Id: calc.c 148 2006-07-28 21:30:43Z sally $ , and is interpreted to mean that the file calc.c was last changed in revision 148 on the evening of July 28, 2006 by the user sally .
1958: Its substitution looks something like $Header: http://svn.example.com/repos/trunk/calc.c 148 2006-07-28 21:30:43Z sally $ .
*****************************************************************
========================= CLASS #1876 =============================
1976: %d Short format of the date of the revision given by %r .
1977: %D Long format of the date of the revision given by %r .
*****************************************************************
========================= CLASS #1883 =============================
1986: %H Equivalent to %P%_%r%_%d%_%a .
1987: %I Equivalent to %b%_%r%_%d%_%a .
*****************************************************************
========================= CLASS #1917 =============================
2021: $ Now, let&#39;s check out the same tree again, but this time we&#39;ll ask Subversion to give us only the topmost directory with none of its children at all: $ svn checkout file:///var/svn/repos mom-empty --depth empty Checked out revision 1 $ Notice that we added to our original svn checkout command line a new --depth option.
2054: $ rm -rf mom-empty $ svn checkout file:///var/svn/repos mom-empty --depth empty Checked out revision 1.
*****************************************************************
========================= CLASS #1918 =============================
2022: This option is present on many of Subversion&#39;s subcommands and is similar to the --non-recursive ( -N ) and --recursive ( -R ) options.
6330: --non-recursive ( -N ) Deprecated .
*****************************************************************
========================= CLASS #1922 =============================
2026: --depth files Include the immediate target of the operation and any of its immediate file children.
2027: --depth immediates Include the immediate target of the operation and any of its immediate file or directory children.
*****************************************************************
========================= CLASS #1932 =============================
2037: Let&#39;s look now at examples of the other depth values: $ svn checkout file:///var/svn/repos mom-files --depth files A mom-files/kitty1.txt A mom-files/doggie1.txt Checked out revision 1.
7340: $ rm /tmp/prop.tmpfile Let&#39;s look now at some multi-operation examples.
*****************************************************************
========================= CLASS #1941 =============================
2046: Watch what happens as we take our empty-depth checkout and gradually telescope it deeper using svn update --set-depth NEW-DEPTH TARGET : $ svn update --set-depth files mom-empty Updating &#39;mom-empty&#39;: A mom-empty/kittie1.txt A mom-empty/doggie1.txt Updated to revision 1.
2047: $ svn update --set-depth immediates mom-empty Updating &#39;mom-empty&#39;: A mom-empty/son A mom-empty/daughter Updated to revision 1.
2048: $ svn update --set-depth infinity mom-empty Updating &#39;mom-empty&#39;: A mom-empty/son/grandson A mom-empty/daughter/granddaughter1 A mom-empty/daughter/granddaughter1/bunny1.txt A mom-empty/daughter/granddaughter1/bunny2.txt A mom-empty/daughter/granddaughter2 A mom-empty/daughter/fishie1.txt Updated to revision 1.
2055: $ svn update --set-depth empty mom-empty/son Updating &#39;mom-empty/son&#39;: A mom-empty/son Updated to revision 1.
2056: $ svn update --set-depth empty mom-empty/daughter Updating &#39;mom-empty/daughter&#39;: A mom-empty/daughter Updated to revision 1.
2057: $ svn update --set-depth infinity mom-empty/daughter/granddaughter1 Updating &#39;mom-empty/daughter/granddaughter1&#39;: A mom-empty/daughter/granddaughter1 A mom-empty/daughter/granddaughter1/bunny1.txt A mom-empty/daughter/granddaughter1/bunny2.txt Updated to revision 1.
*****************************************************************
========================= CLASS #1967 =============================
2078: Using an additive approach to sparse directories, you might check out the directory with an empty depth, then explicitly telescope (using svn update --set-depth infinity ) each and every subdirectory of the directory except the one you don&#39;t care about.
2083: Then run svn update --set-depth exclude on the one subdirectory you don&#39;t care about.
2091: Then, exclude the directory you don&#39;t want using svn update --set-depth exclude .
*****************************************************************
========================= CLASS #1972 =============================
2084: $ svn checkout http://svn.example.com/repos/many-dirs $ svn update --set-depth exclude many-dirs/unwanted-dir D many-dirs/unwanted-dir $ This approach leaves your working copy with the same stuff as in the first approach, but any new subdirectories which appear in the top-level directory would also show up when you update your working copy.
2093: $ svn checkout http://svn.example.com/repos/many-dirs --depth immediates $ svn update --set-depth exclude many-dirs/unwanted-dir D many-dirs/unwanted-dir $ svn update --set-depth infinity many-dirs/* $ Once again, your working copy will have the same stuff as in the previous two scenarios.
*****************************************************************
========================= CLASS #1999 =============================
2113: Here&#39;s where the difficulty sets in.
3434: Here&#39;s where version control can help.
*****************************************************************
========================= CLASS #2033 =============================
2147: $ svn lock banana.jpg -m &quot;Editing file for tomorrow&#39;s release.&quot; &#39;banana.jpg&#39; locked by user &#39;harry&#39;.
6597: Options Examples Lock two files in your working copy: $ svn lock tree.jpg house.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;.
6598: &#39;house.jpg&#39; locked by user &#39;harry&#39;.
6600: Lock a file without a working copy: $ svn lock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;.
6921: Options Examples Unlock two files in your working copy: $ svn unlock tree.jpg house.jpg &#39;tree.jpg&#39; unlocked.
6922: &#39;house.jpg&#39; unlocked.
6924: Unlock a file without a working copy: $ svn unlock http://svn.red-bean.com/repos/test/tree.jpg &#39;tree.jpg unlocked.
*****************************************************************
========================= CLASS #2050 =============================
2164: Regarding Lock Tokens A lock token isn&#39;t an authentication token, so much as an authorization token.
2165: The token isn&#39;t a protected secret.
*****************************************************************
========================= CLASS #2077 =============================
2192: Once again, svn info has the answers: $ svn info ^/raisin.jpg Path: raisin.jpg Name: raisin.jpg URL: http://svn.example.com/repos/project/raisin.jpg Repository Root: http://svn.example.com/repos/project Repository UUID: edb2f264-5ef2-0310-a47a-87b0ce17a8ec Revision: 105 Node Kind: file Last Changed Author: sally Last Changed Rev: 32 Last Changed Date: 2006-01-25 12:43:04 -0600 (Sun, 25 Jan 2006) Lock Token: opaquelocktoken:fc2b4dee-98f9-0310-abf3-653ff3226e6b Lock Owner: harry Lock Created: 2006-02-16 13:29:18 -0500 (Thu, 16 Feb 2006) Lock Comment (1 line): Need to make a quick tweak to this image.
2206: Path: /project/raisin.jpg UUID Token: opaquelocktoken:fc2b4dee-98f9-0310-abf3-653ff3226e6b Owner: harry Created: 2006-02-16 13:29:18 -0500 (Thu, 16 Feb 2006) Expires: Comment (1 line): Need to make a quick tweak to this image.
*****************************************************************
========================= CLASS #2079 =============================
2194: If the main argument to svn info is a working copy path, then all of the working copy&#39;s cached information is displayed; any mention of a lock means that the working copy is holding a lock token (if a file is locked by another user or in another working copy, svn info on a working copy path will show no lock information at all).
6875: &#39;O&#39; File is locked either by another user or in another working copy.
*****************************************************************
========================= CLASS #2091 =============================
2207: $ svnadmin rmlocks /var/svn/repos /project/raisin.jpg Removed lock on &#39;/project/raisin.jpg&#39;.
7116: Removed lock on &#39;/house.jpg.
*****************************************************************
========================= CLASS #2093 =============================
2209: To do this, Sally simply needs to pass the --force option to the svn unlock command: $ svn status -u M 23 bar.c M O 32 raisin.jpg * 72 foo.h Status against revision: 105 $ svn unlock raisin.jpg svn: E195013: &#39;raisin.jpg&#39; is not locked in this working copy $ svn info raisin.jpg | grep URL URL: http://svn.example.com/repos/project/raisin.jpg $ svn unlock http://svn.example.com/repos/project/raisin.jpg svn: warning: W160039: Unlock failed on &#39;raisin.jpg&#39; (403 Forbidden) $ svn unlock --force http://svn.example.com/repos/project/raisin.jpg &#39;raisin.jpg&#39; unlocked.
6874: &#39;K&#39; File is locked in this working copy.
*****************************************************************
========================= CLASS #2102 =============================
2218: To do this, Sally passes the --force option to svn lock : $ svn lock raisin.jpg svn: warning: W160035: Path &#39;/project/raisin.jpg&#39; is already locked by user &#39;h arry&#39; in filesystem &#39;/var/svn/repos/db&#39; $ svn lock --force raisin.jpg &#39;raisin.jpg&#39; locked by user &#39;sally&#39;.
6599: Lock a file in your working copy that is currently locked by another user: $ svn lock tree.jpg svn: warning: W160035: Path &#39;/tree.jpg is already locked by user &#39;sally&#39; in fi lesystem &#39;/var/svn/repos/db&#39; $ svn lock --force tree.jpg &#39;tree.jpg&#39; locked by user &#39;harry&#39;.
6923: Unlock a file in your working copy that is currently locked by another user: $ svn unlock tree.jpg svn: E195013: &#39;tree.jpg&#39; is not locked in this working copy $ svn unlock --force tree.jpg &#39;tree.jpg&#39; unlocked.
*****************************************************************
========================= CLASS #2247 =============================
2367: Each of these methods has its pros and cons, and to a large degree, the details of the changes being made heavily influence the methodology used to distinguish them.
5640: Each of these options has its pros and cons.
*****************************************************************
========================= CLASS #2275 =============================
2395: In this case, Subversion will first warn Harry that button.c is being removed from the first changelist: $ svn changelist ui-fix button.c D [math-fixes] button.c A [ui-fix] button.c $ svn status --- Changelist &#39;ui-fix&#39;: button.c --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ Harry now has two distinct changelists present in his working copy, and svn status will group its output according to these changelist determinations.
2399: $ svn status --- Changelist &#39;ui-fix&#39;: M button.c --- Changelist &#39;math-fixes&#39;: M integer.c M mathops.c $ Changelists As Operation Filters The visual grouping that Harry sees in the output of svn status as shown in our previous section is nice, but not entirely useful.
*****************************************************************
========================= CLASS #2313 =============================
2434: authentication credentials When the server process receives a client request, it often demands that the client identify itself.
4097: Restart the server process.
*****************************************************************
========================= CLASS #2384 =============================
2509: If so, the client will try to use those credentials to authenticate against the server.
2511: If so, it attempts to use those credentials to authenticate.
*****************************************************************
========================= CLASS #2414 =============================
2542: That tool is the svnmucc tool the Subversion Multiple URL Command Client: $ svnmucc --help Subversion multiple URL command client usage: svnmucc ACTION... Perform one or more Subversion repository URL-based ACTIONs, committing the result as a (single) new revision.
7286: svnmucc svnmucc Perform one or more Subversion repository URL-based ACTIONs, committing the result as a (single) new revision.
*****************************************************************
========================= CLASS #2513 =============================
2647: This allows you to save your not-yet-completed work frequently without interfering with others&#39; changes and while still selectively sharing information with your collaborators.
2794: discussion with your collaborators.
*****************************************************************
========================= CLASS #2531 =============================
2665: Subversion does not support copying between different repositories.
6507: Subversion does not support cross-repository copying.
*****************************************************************
========================= CLASS #2541 =============================
2675: When you copy a directory, you don&#39;t need to worry about the repository growing huge Subversion doesn&#39;t actually duplicate any data.
2888: No need to worry.
*****************************************************************
========================= CLASS #2558 =============================
2692: Let&#39;s pretend that a week goes by, and the following commits happen: You make a change to /calc/branches/my-calc-branch/src/button.c , which creates revision 342.
2693: You make a change to /calc/branches/my-calc-branch/src/integer.c , which creates revision 343.
*****************************************************************
========================= CLASS #2561 =============================
2696: The branching of one file&#39;s history Things get interesting when you look at the history of changes made to your copy of integer.c : $ pwd /home/user/my-calc-branch $ svn log -v src/integer.c ------------------------------------------------------------------------ r343 | user | 2013-02-15 14:11:09 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/branches/my-calc-branch/src/integer.c * integer.c: frozzled the wazjub.
2697: ------------------------------------------------------------------------ r341 | user | 2013-02-15 07:41:25 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: A /calc/branches/my-calc-branch (from /calc/trunk:340) Creating a private branch of /calc/trunk.
2701: ------------------------------------------------------------------------ Notice that Subversion is tracing the history of your branch&#39;s integer.c all the way back through time, even traversing the point where it was copied.
2703: Now look at what happens when Sally runs the same command on her copy of the file: $ pwd /home/sally/calc $ svn log -v src/integer.c ------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Refactor the bazzle functions.
2772: Using the ongoing example, you know that you branched /calc/trunk to /calc/branches/my-calc-branch in revision 341: $ svn log -v -r341 ------------------------------------------------------------------------ r341 | user | 2013-02-15 07:41:25 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: A /calc/branches/my-calc-branch (from /calc/trunk:340) Creating a private branch of /calc/trunk.
3045: For example, let&#39;s assume you&#39;ve created a new feature branch /calc/branches/my-calc-feature-branch copied from /calc/trunk : $ svn log ^/calc/branches/new-calc-feature-branch -v -r403 ------------------------------------------------------------------------ r403 | user | 2013-02-20 03:26:12 -0500 (Wed, 20 Feb 2013) | 1 line Changed paths: A /calc/branches/new-calc-feature-branch (from /calc/trunk:402) Create a new calc branch for Feature &#39;X&#39;.
3218: ------------------------------------------------------------------------ r344 | sally | 2013-02-15 16:44:44 -0500 (Fri, 15 Feb 2013) | 1 line Changed paths: M /calc/trunk/src/integer.c Merged via: r352 Refactor the bazzle functions.
6421: $ svn log -c 5 http://svn.red-bean.com/repos/test/readme.txt ------------------------------------------------------------------------ r5 | harry | 2008-05-29 07:26:12 -0600 (Thu, 29 May 2008) | 1 line Commit the results of &#39;double-space-after-period.sh&#39;.
6422: ------------------------------------------------------------------------ $ svn diff -c 5 http://svn.red-bean.com/repos/test/readme.txt Index: http://svn.red-bean.com/repos/test/readme.txt =================================================================== --- http://svn.red-bean.com/repos/test/readme.txt (revision 4) +++ http://svn.red-bean.com/repos/test/readme.txt (revision 5) @@ -1,5 +1,5 @@ This is a README file.
*****************************************************************
========================= CLASS #2605 =============================
2750: You can merge specific changesets from one branch to another by naming them in the merge arguments: passing -c 9238 to svn merge would merge changeset r9238 into your working copy.
3041: changesets from one branch to another.
*****************************************************************
========================= CLASS #2615 =============================
2760: Then simply run: $ pwd /home/user/my-calc-branch $ svn merge ^/calc/trunk --- Merging r341 through r351 into &#39;.&#39;: U doc/INSTALL U src/real.c U src/button.c U Makefile --- Recording mergeinfo for merge of r341 through r351 into &#39;.&#39;: U .
2824: $ svn merge ^/calc/trunk --- Merging r352 through r361 into &#39;.&#39;: U src/real.c U src/main.c --- Recording mergeinfo for merge of r352 through r361 into &#39;.&#39;: U .
2855: $ svn merge ^/calc/trunk --- Merging r362 through r378 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r362 through r378 into &#39;.&#39;: U .
2868: $ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: U src/real.c U src/main.c U Makefile --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U .
2969: $ svn merge ^/calc/trunk .
2970: -c-392 --- Reverse-merging r392 into &#39;.&#39;: U src/real.c U src/main.c U src/button.c U src/integer.c --- Recording mergeinfo for reverse merge of r392 into &#39;.&#39;: U .
3062: Because we already cherrypicked r413, that change is skipped: $ svn merge ^/calc/trunk --- Merging r403 through r412 into &#39;.&#39;: U doc/INSTALL U src/main.c U src/button.c U src/integer.c U Makefile U README --- Merging r414 through r458 into &#39;.&#39;: G doc/INSTALL G src/main.c G src/integer.c G Makefile --- Recording mergeinfo for merge of r403 through r458 into &#39;.&#39;: U .
3149: $ svn st $ svn merge ^/paint/trunk -r289:291 --- Merging r290 through r291 into &#39;.&#39;: C Makefile --- Recording mergeinfo for merge of r290 through r291 into &#39;.&#39;: U .
3183: --- Recording mergeinfo for merge of r465 into &#39;.&#39;: G .
3190: Now any subsequent attempts to merge the feature to /paint/trunk are inoperative: $ svn merge ^/paint/trunk -c465 --- Recording mergeinfo for merge of r465 into &#39;.&#39;: U .
3192: $ svn merge ^/paint/branches/paint-python-wrapper -r462:464 --- Recording mergeinfo for merge of r463 through r464 into &#39;.&#39;: U .
3198: $ svn merge ^/paint/trunk -c465 --ignore-ancestry --- Merging r465 into &#39;.&#39;: A python A python/paint.py G .
3252: First you perform an automatic sync merge with /calc/trunk and commit that in r470: $ cd calc/trunk $ svn merge ^/calc/trunk --- Merging differences between repository URLs into &#39;.&#39;: U doc/INSTALL A FAQ U src/main.c U src/button.c U src/integer.c U Makefile U README U .
3253: --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U .
3261: $ svn merge ^/calc/branches/my-calc-branch --- Merging differences between repository URLs into &#39;.&#39;: C src/integer.c U src/real.c A src/whole.c --- Recording mergeinfo for merge between repository URLs into &#39;.&#39;: U .
3477: $ svn merge ^/calc/branches/mybranch --- Merging differences between repository URLs into &#39;.&#39;: U real.c U integer.c A newdirectory A newdirectory/newfile U .
*****************************************************************
========================= CLASS #2616 =============================
2761: $ properties svn:mergeinfo This basic syntax svn merge URL tells Subversion to merge all changes which have not been previously merged from the URL to the current working directory (which is typically the root of your working copy).
2781: Notice that the current working directory ( . )
*****************************************************************
========================= CLASS #2620 =============================
2765: We&#39;ll discuss both this property and these notifications later in this chapter, in .
3108: We discuss this later in this chapter in .
4912: We describe how later in this chapter, in .
*****************************************************************
========================= CLASS #2627 =============================
2773: ------------------------------------------------------------------------ When you are ready to synchronize your branch with the ongoing changes from trunk, you specify the starting revision as the revision of /calc/trunk which the branch was copied from and the ending revision as the youngest change on /calc/trunk .
3211: ------------------------------------------------------------------------ We happen to know that this merge to the branch was nothing but a merge of trunk changes.
*****************************************************************
========================= CLASS #2635 =============================
2787: (working copy) Property changes on: .
3180: (revision 465) Property changes on: .
3187: (working copy) Property changes on: .
*****************************************************************
========================= CLASS #2642 =============================
2795: If things look good, however, you can submit these changes into the repository: $ svn commit -m &quot;Sync latest trunk changes to my-calc-branch.&quot; Sending .
2856: $ # build, test, ... $ svn commit -m &quot;Final merge of trunk changes to my-calc-branch.&quot; Sending .
2869: $ # build, test, verify, ... $ svn commit -m &quot;Merge my-calc-branch back into trunk!&quot; Sending .
*****************************************************************
========================= CLASS #2643 =============================
2796: Sending Makefile Sending doc/INSTALL Sending src/button.c Sending src/real.c Transmitting file data .... Committed revision 352.
2870: Sending Makefile Sending src/main.c Sending src/real.c Transmitting file data ... Committed revision 380.
4339: Transmitting file data .... Committed revision 4065.
*****************************************************************
========================= CLASS #2644 =============================
2797: At this point, your private branch is now in sync with the trunk, so you can rest easier knowing that as you continue to work in isolation, you&#39;re not drifting too far away from what everyone else is doing.
3439: Teams continue to work in parallel.
*****************************************************************
========================= CLASS #2679 =============================
2834: A brief example will help explain: # We need to merge r958 from trunk to branches/proj-X/doc/INSTALL, # but that revision also affects main.c, which we don&#39;t want to merge: $ svn log --verbose --quiet -r 958 ^/ ------------------------------------------------------------------------ r958 | bruce | 2011-10-20 13:28:11 -0400 (Thu, 20 Oct 2011) Changed paths: M /trunk/doc/INSTALL M /trunk/src/main.c ------------------------------------------------------------------------ # No problem, we&#39;ll do a subtree merge targeting the INSTALL file # directly, but first take a note of what mergeinfo exists on the # root of the branch: $ cd branches/proj-X $ svn propget svn:mergeinfo --recursive Properties on &#39;.&#39;: svn:mergeinfo /trunk:651-652 # Now we perform the subtree merge, note that merge source # and target both point to INSTALL: $ svn merge ^/trunk/doc/INSTALL doc/INSTALL -c 958 --- Merging r958 into &#39;doc/INSTALL&#39;: U doc/INSTALL --- Recording mergeinfo for merge of r958 into &#39;doc/INSTALL&#39;: G doc/INSTALL # Once the merge is complete there is now subtree mergeinfo on INSTALL: $ svn propget svn:mergeinfo --recursive Properties on &#39;.&#39;: svn:mergeinfo /trunk:651-652 Properties on &#39;doc/INSTALL&#39;: svn:mergeinfo /trunk/doc/INSTALL:651-652,958 # What if we then decide we do want all of r958?
2836: -c 958 --- Merging r958 into &#39;.&#39;: U src/main.c --- Recording mergeinfo for merge of r958 into &#39;.&#39;: U .
3009: ------------------------------------------------------------------------ In the example, we&#39;re assuming that you&#39;re looking for a deleted file real.c .
*****************************************************************
========================= CLASS #2750 =============================
2914: Returning to our earlier example, we use the subcommand to analyze the relationship between /calc/trunk and /calc/branches/my-calc-branch : $ cd my-calc-branch $ svn mergeinfo ^/calc/trunk youngest common ancestor | last full merge | | tip of branch | | | repository path 340 382 | | -------| |------------ calc/trunk \ / \ / --| |------------ calc/branches/my-calc-branch | | 379 382 The diagram shows that /calc/branches/my-calc-branch was copied from /calc/trunk@340 and that most recent automatic merge was the reintegrate merge we made from the branch to the trunk in r380.
3259: ------------------------------------------------------------------------ Now you decide to merge your branch back to the trunk.
*****************************************************************
========================= CLASS #2795 =============================
2960: If you don&#39;t like the results of the merge, simply run svn revert .
3093: If you don&#39;t like the results, you can simply svn revert all of the changes.
*****************************************************************
========================= CLASS #2804 =============================
2971: $ svn st M src/button.c M src/integer.c M src/main.c M src/real.c $ svn diff # verify that the change is removed $ svn commit -m &quot;Undoing erroneous change committed in r392.&quot; Sending src/button.c Sending src/integer.c Sending src/main.c Sending src/real.c Transmitting file data .... Committed revision 399.
3051: $ svn st M .
*****************************************************************
========================= CLASS #2937 =============================
3120: The natural history of ^/branches/feature-branch contains all the repository paths and revision ranges through which the history of the new branch has ever passed: /trunk:100-200 /branches/feature-branch:201 With each new revision added to the repository, the natural history and thus, implicit mergeinfo of the branch continues to expand to include those revisions until the day the branch is deleted.
3462: Then the branch is deleted.
*****************************************************************
========================= CLASS #2955 =============================
3140: C src/button.c &gt; local file missing, incoming file edit upon merge !
3141: C src/integer.c &gt; local file missing, incoming file edit upon merge !
3142: C src/main.c &gt; local file missing, incoming file edit upon merge !
*****************************************************************
========================= CLASS #2990 =============================
3191: $ svn st # No change!
3193: $ svn st # No change!
*****************************************************************
========================= CLASS #3058 =============================
3275: gives an example of such a hook script: Merge-tracking gatekeeper start-commit hook script #!/usr/bin/env python import sys # The start-commit hook is invoked immediately after a Subversion txn is # created and populated with initial revprops in the process of doing a # commit.
4641: provides an example of such a file.
*****************************************************************
========================= CLASS #3115 =============================
3332: In other words, an update moves your working copy through time.
3333: A switch moves your working copy through time and space.
*****************************************************************
========================= CLASS #3306 =============================
3530: $ cd /path/to/vendor $ svn copy http://svn.othervendor.com/repos/libcomplex/tags/1.0.0 \ libcomplex-custom --- Copying from foreign repository URL &#39;http://svn.othervendor.com/repos/lib\ complex/tags/1.0.0&#39;: A libcomplex-custom A libcomplex-custom/README A libcomplex-custom/LICENSE A libcomplex-custom/src/code.c A libcomplex-custom/tests A libcomplex-custom/tests/TODO $ svn commit -m &quot;Initialize libcomplex vendor branch from libcomplex 1.0.0.&quot; Adding libcomplex-custom Adding libcomplex-custom/README Adding libcomplex-custom/LICENSE Adding libcomplex-custom/src Adding libcomplex-custom/src/code.h Adding libcomplex-custom/src/code.c Transmitting file data ....................................... Committed revision 1161.
3563: $ tar xvfz libcomplex-1.0.0.tar.gz libcomplex-1.0.0/ libcomplex-1.0.0/README libcomplex-1.0.0/LICENSE libcomplex-1.0.0/src/code.c libcomplex-1.0.0/tests libcomplex-1.0.0/tests/TODO $ svn import libcomplex-1.0.0 \ http://svn.example.com/projects/vendor/libcomplex-1.0.0 \ --no-ignore --no-auto-props \ -m &quot;Import libcomplex 1.0.0 sources.&quot; Adding libcomplex-custom Adding libcomplex-custom/README Adding libcomplex-custom/LICENSE Adding libcomplex-custom/src Adding libcomplex-custom/src/code.h Adding libcomplex-custom/src/code.c Transmitting file data ....................................... Committed revision 1160.
3569: $ svn copy http://svn.example.com/projects/vendor/libcomplex-1.0.0 \ http://svn.example.com/projects/vendor/libcomplex-custom \ -m &quot;Initialize libcomplex vendor branch from libcomplex 1.0.0.&quot; Committed revision 1161.
3583: $ svn copy http://svn.example.com/projects/vendor/libcomplex-1.0.0 \ http://svn.example.com/projects/vendor/libcomplex-1.0.1 \ -m &quot;Setup a construction zone for libcomplex 1.0.1.&quot; Committed revision 1282.
5109: Transmitting file data ....... Committed revision 2.
5113: Transmitting file data ....... Committed revision 2.
5117: Transmitting file data ....... Committed revision 2.
7501: Committed revision 2.
*****************************************************************
========================= CLASS #3308 =============================
3532: Now that we have a vendor branch based on libcomplex 1.0.0, we can begin making the customizations to libcomplex required for our purposes, committing them directly to the vendor branch we&#39;ve created.
3571: At this point we have a vendor branch based on libcomplex 1.0.0.
3572: We are now poised to begin making the customizations to libcomplex required for our purposes committing them directly to the vendor branch we&#39;ve created and then to start using our customized libcomplex in our own application.
*****************************************************************
========================= CLASS #3310 =============================
3534: Some time later, libcomplex 1.0.1 is released.
3573: Some time later, libcomplex 1.0.1 is released.
*****************************************************************
========================= CLASS #3311 =============================
3535: After reviewing its changes, we decide we&#39;d like to upgrade our vendor branch to the new version.
3574: After reviewing its changes, we decide we&#39;d like to upgrade our vendor branch to the new version.
*****************************************************************
========================= CLASS #3316 =============================
3540: $ cd /path/to/vendor $ svn merge http://svn.othervendor.com/repos/libcomplex/tags/1.0.0 \ http://svn.othervendor.com/repos/libcomplex/tags/1.0.1 \ libcomplex-custom --- Merging differences between foreign repository URLs into &#39;.&#39;: U libcomplex-custom/src/code.h C libcomplex-custom/src/code.c U libcomplex-custom/README Summary of conflicts: Text conflicts: 1 Conflict discovered in file &#39;libcomplex-custom/src/code.c&#39;.
3600: $ cd libcomplex-custom $ svn merge ^/vendor/libcomplex-1.0.0 \ ^/vendor/libcomplex-1.0.1 --- Merging differences between repository URLs into &#39;.&#39;: U src/code.h C src/code.c U README Summary of conflicts: Text conflicts: 1 Conflict discovered in file &#39;src/code.c&#39;.
*****************************************************************
========================= CLASS #3319 =============================
3544: Subversion safely detects this conflict, and gives us the opportunity to resolve it so that our customizations to what is now libcomplex 1.0.1 continue to make sense.
3602: Subversion detects this conflict, and gives us the opportunity to resolve it (using the methods described in ) so that our customizations to what is now libcomplex 1.0.1 continue to make sense.
*****************************************************************
========================= CLASS #3321 =============================
3546: Once we&#39;ve resolved the conflicts and performed any testing or review we need, we can commit the changes to our vendor branch.
3603: Once we&#39;ve resolved the conflicts and performed any testing or review we need, we can commit the changes to our vendor branch.
*****************************************************************
========================= CLASS #3322 =============================
3547: $ svn status libcomplex-custom M libcomplex-custom/src/code.h M libcomplex-custom/src/code.c M libcomplex-custom/README $ svn commit -m &quot;Upgrade vendor branch to libcomplex 1.0.1.&quot; \ libcomplex-custom Sending libcomplex-custom/README Sending libcomplex-custom/src/code.h Sending libcomplex-custom/src/code.c Transmitting file data ... Committed revision 1282.
3595: $ svn commit -m &quot;Upgrade vendor branch to libcomplex 1.0.1.&quot; \ libcomplex-1.0.1 Sending libcomplex-1.0.1/README Sending libcomplex-1.0.1/src/code.h Sending libcomplex-1.0.1/src/code.c Transmitting file data ... Committed revision 1283.
3604: $ svn status M src/code.h M src/code.c M README $ svn commit -m &quot;Upgrade vendor branch to libcomplex 1.0.1.&quot; Sending README Sending src/code.h Sending src/code.c Transmitting file data ... Committed revision 1284.
*****************************************************************
========================= CLASS #3368 =============================
3608: To branch or not to branch that is an interesting question.
3644: To branch or not to branch?
*****************************************************************
========================= CLASS #3424 =============================
3666: How does it look?
3667: How does it feel?
*****************************************************************
========================= CLASS #3477 =============================
3722: Such an arrangement might look like this: / utils/ calc/ trunk/ tags/ branches/ calendar/ trunk/ tags/ branches/ office/ spreadsheet/ trunk/ tags/ branches/ Lay out your repository in whatever way you see fit.
5707: Do that in whatever way you see fit.
5716: Do that in whatever way you see fit.
*****************************************************************
========================= CLASS #3650 =============================
3898: See and for more information about these aspects of repository maintenance.
6322: See and for more information.
*****************************************************************
========================= CLASS #3682 =============================
3930: The syntax of svnadmin is similar to that of other Subversion command-line programs: $ svnadmin help general usage: svnadmin SUBCOMMAND REPOS_PATH [ARGS &amp; OPTIONS ...] Type &#39;svnadmin help &lt;subcommand&gt;&#39; for help on a specific subcommand.
3955: The syntax of svndumpfilter is as follows: $ svndumpfilter help general usage: svndumpfilter SUBCOMMAND [ARGS &amp; OPTIONS ...] Type &#39;svndumpfilter help &lt;subcommand&gt;&#39; for help on a specific subcommand.
3961: $ svnrdump help general usage: svnrdump SUBCOMMAND URL [-r LOWER[:UPPER]] Type &#39;svnrdump help &lt;subcommand&gt;&#39; for help on a specific subcommand.
*****************************************************************
========================= CLASS #3768 =============================
4025: REPOS=&quot;${1}&quot; if [ &quot;x$REPOS&quot; = x ] ; then echo &quot;usage: $0 REPOS_PATH&quot; exit fi for TXN in `svnadmin lstxns ${REPOS}`; do echo &quot;---[ Transaction ${TXN} ]-------------------------------------------&quot; svnlook info &quot;${REPOS}&quot; -t &quot;${TXN}&quot; done The output of the script is basically a concatenation of several chunks of svnlook info output (see ) and will look something like this: $ txn-info.sh myrepos ---[ Transaction 19 ]------------------------------------------- sally 2001-09-04 11:57:19 -0500 (Tue, 04 Sep 2001) 0 ---[ Transaction 3a1 ]------------------------------------------- harry 2001-09-10 16:50:30 -0500 (Mon, 10 Sep 2001) 39 Trying to commit over a faulty network.
4026: ---[ Transaction a45 ]------------------------------------------- sally 2001-09-12 11:09:28 -0500 (Wed, 12 Sep 2001) 0 $ A long-abandoned transaction usually represents some sort of failed or interrupted commit.
*****************************************************************
========================= CLASS #3771 =============================
4029: Various sources of information including Apache&#39;s error and access logs, Subversion&#39;s operational logs, Subversion revision history, and so on can be employed in the decision-making process.
4800: Subversion&#39;s mod_dav_svn uses Apache&#39;s error logging interface as well.
*****************************************************************
========================= CLASS #3836 =============================
4094: Please wait; recovering the repository may take some time... Recovery completed.
7105: Please wait; recovering the repository may take some time... Recovery completed.
7112: Please wait; recovering the repository may take some time... Recovery completed.
7142: Please wait; upgrading the repository may take some time... Upgrade completed.
*****************************************************************
========================= CLASS #3837 =============================
4095: The latest repos revision is 19.
7106: The latest repos revision is 34.
*****************************************************************
========================= CLASS #3871 =============================
4130: For example: $ svnlook youngest myrepos 26 $ svnadmin dump myrepos &gt; dumpfile * Dumped revision 0.
4131: * Dumped revision 1.
4132: * Dumped revision 2.
4133: * Dumped revision 25.
4134: * Dumped revision 26.
4217: * Dumped revision 1.
4218: * Dumped revision 2.
4219: * Dumped revision 3.
7038: * Dumped revision 1.
7039: * Dumped revision 2.
7372: * Dumped revision 1.
7373: * Dumped revision 2.
*****************************************************************
========================= CLASS #3877 =============================
4140: ------- Committed new rev 1 (loaded from original rev 1) &gt;&gt;&gt; &lt;&lt;&lt; Started new txn, based on original revision 2 * editing path : A/mu ... done.
4142: ------- Committed new rev 2 (loaded from original rev 2) &gt;&gt;&gt; &lt;&lt;&lt; Started new txn, based on original revision 25 * editing path : A/D/gamma ... done.
4143: ------- Committed new rev 25 (loaded from original rev 25) &gt;&gt;&gt; &lt;&lt;&lt; Started new txn, based on original revision 26 * adding path : A/Z/zeta ... done.
4144: * editing path : A/mu ... done.
6630: If you ran svn log on a range of two revisions, you would get this: $ svn log -r 14:15 ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r15 | ------------------------------------------------------------------------ However, if you wanted to gather two nonsequential log messages into a file, you might do something like this: $ svn log -r 14 &gt; mylog $ svn log -r 19 &gt;&gt; mylog $ svn log -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ ------------------------------------------------------------------------ r27 | ------------------------------------------------------------------------ You can avoid the clutter of the double dashed lines in your output by using the --incremental option: $ svn log --incremental -r 14 &gt; mylog $ svn log --incremental -r 19 &gt;&gt; mylog $ svn log --incremental -r 27 &gt;&gt; mylog $ cat mylog ------------------------------------------------------------------------ r14 | ------------------------------------------------------------------------ r19 | ------------------------------------------------------------------------ r27 | The --incremental option provides similar output control when using the --xml option: $ svn log --xml --incremental -r 1 sandwich.txt &lt;logentry revision=&quot;1&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-06-03T06:35:53.048870Z&lt;/date&gt; &lt;msg&gt;Initial Import.&lt;/msg&gt; &lt;/logentry&gt; Sometimes when you run svn log on a specific path and a specific revision, you see no log information output at all, as in the following: $ svn log -r 20 http://svn.red-bean.com/untouched.txt ------------------------------------------------------------------------ That just means the path wasn&#39;t modified in that revision.
*****************************************************************
========================= CLASS #3922 =============================
4188: Because it modifies revision properties after committing new revisions, svnrdump load requires that the target repository have revision property changes enabled via the pre-revprop-change hook.
7383: To operate properly svnrdump load requires that the target repository have revision property modification enabled via the pre-revprop-change hook.
*****************************************************************
========================= CLASS #3948 =============================
4216: They have been living side-by-side in a layout like this: / calc/ trunk/ branches/ tags/ calendar/ trunk/ branches/ tags/ spreadsheet/ trunk/ branches/ tags/ To get these three projects into their own repositories, we first dump the whole repository: $ svnadmin dump /var/svn/repos &gt; repos-dumpfile * Dumped revision 0.
7037: Options Examples Dump your whole repository: $ svnadmin dump /var/svn/repos &gt; full.dump * Dumped revision 0.
7371: $ svnrdump dump http://svn.example.com/repos/calc &gt; full.dump * Dumped revision 0.
*****************************************************************
========================= CLASS #3957 =============================
4228: All that remains now is to create your three new repositories, and load each dump file into the right repository, ignoring the UUID found in the dump stream: $ svnadmin create calc $ svnadmin load --ignore-uuid calc &lt; calc-dumpfile &lt;&lt;&lt; Started new transaction, based on original revision 1 * adding path : Makefile ... done.
4230: $ svnadmin create calendar $ svnadmin load --ignore-uuid calendar &lt; cal-dumpfile &lt;&lt;&lt; Started new transaction, based on original revision 1 * adding path : Makefile ... done.
4232: $ svnadmin create spreadsheet $ svnadmin load --ignore-uuid spreadsheet &lt; ss-dumpfile &lt;&lt;&lt; Started new transaction, based on original revision 1 * adding path : Makefile ... done.
*****************************************************************
========================= CLASS #4025 =============================
4298: Mirror repository&#39;s pre-revprop-change hook script #!/bin/sh USER=&quot;$3&quot; if [ &quot;$USER&quot; = &quot;syncuser&quot; ]; then exit 0; fi echo &quot;Only the syncuser user may change revision properties&quot; &gt;&amp;2 exit 1 That covers revision property changes.
4301: Mirror repository&#39;s start-commit hook script #!/bin/sh USER=&quot;$2&quot; if [ &quot;$USER&quot; = &quot;syncuser&quot; ]; then exit 0; fi echo &quot;Only the syncuser user may commit new revisions&quot; &gt;&amp;2 exit 1 After installing our hook scripts and ensuring that they are executable by the Subversion server, we&#39;re finished with the setup of the mirror repository.
5438: Sample registration entries (.reg) file REGEDIT4 [HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion\Servers\groups] [HKEY_LOCAL_MACHINE\Software\Tigris.org\Subversion\Servers\global] &quot;#http-auth-types&quot;=&quot;basic;digest;negotiate&quot; &quot;#http-compression&quot;=&quot;yes&quot; &quot;#http-library&quot;=&quot;&quot; &quot;#http-proxy-exceptions&quot;=&quot;&quot; &quot;#http-proxy-host&quot;=&quot;&quot; &quot;#http-proxy-password&quot;=&quot;&quot; &quot;#http-proxy-port&quot;=&quot;&quot; &quot;#http-proxy-username&quot;=&quot;&quot; &quot;#http-timeout&quot;=&quot;0&quot; &quot;#neon-debug-mask&quot;=&quot;&quot; &quot;#ssl-authority-files&quot;=&quot;&quot; &quot;#ssl-client-cert-file&quot;=&quot;&quot; &quot;#ssl-client-cert-password&quot;=&quot;&quot; &quot;#ssl-pkcs11-provider&quot;=&quot;&quot; &quot;#ssl-trust-default-ca&quot;=&quot;&quot; &quot;#store-auth-creds&quot;=&quot;yes&quot; &quot;#store-passwords&quot;=&quot;yes&quot; &quot;#store-plaintext-passwords&quot;=&quot;ask&quot; &quot;#store-ssl-client-cert-pp&quot;=&quot;yes&quot; &quot;#store-ssl-client-cert-pp-plaintext&quot;=&quot;ask&quot; &quot;#username&quot;=&quot;&quot; [HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\auth] &quot;#password-stores&quot;=&quot;windows-cryptoapi&quot; [HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\helpers] &quot;#diff-cmd&quot;=&quot;&quot; &quot;#diff-extensions&quot;=&quot;-u&quot; &quot;#diff3-cmd&quot;=&quot;&quot; &quot;#diff3-has-program-arg&quot;=&quot;&quot; &quot;#editor-cmd&quot;=&quot;notepad&quot; &quot;#merge-tool-cmd&quot;=&quot;&quot; [HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\tunnels] [HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\miscellany] &quot;#enable-auto-props&quot;=&quot;no&quot; &quot;#global-ignores&quot;=&quot;*.o *.lo *.la *.al .libs *.so *.so.
5440: *.swp .DS_Store&quot; &quot;#interactive-conflicts&quot;=&quot;yes&quot; &quot;#log-encoding&quot;=&quot;&quot; &quot;#mime-types-file&quot;=&quot;&quot; &quot;#no-unlock&quot;=&quot;no&quot; &quot;#preserved-conflict-file-exts&quot;=&quot;doc ppt xls od?&quot; &quot;#use-commit-times&quot;=&quot;no&quot; [HKEY_CURRENT_USER\Software\Tigris.org\Subversion\Config\auto-props] shows the contents of a .reg file, which contains some of the most commonly used configuration options and their default values.
5485: The default value is *.o *.lo *.la *.al .libs *.so *.so.
6980: The default value is 16 .
7202: The default value is -u .
7412: The default value is 16 .
*****************************************************************
========================= CLASS #4035 =============================
4309: $ svnsync initialize http://svn.example.com/svn-mirror \ http://svnbook.googlecode.com/svn \ --sync-username syncuser --sync-password syncpass Copied properties for revision 0 (svn:sync-* properties skipped).
4327: Copied properties for revision 1.
4329: Copied properties for revision 2.
4332: Copied properties for revision 3.
4335: Copied properties for revision 4063.
4338: Copied properties for revision 4064.
4340: Copied properties for revision 4065.
5108: Copied properties for revision 1.
5110: Copied properties for revision 2.
5112: Copied properties for revision 1.
5114: Copied properties for revision 2.
5116: Copied properties for revision 1.
5118: Copied properties for revision 2.
7500: Copied properties for revision 1.
7502: Copied properties for revision 2.
7504: Copied properties for revision 3.
7506: Copied properties for revision 45.
7508: Copied properties for revision 46.
7510: Copied properties for revision 47.
*****************************************************************
========================= CLASS #4092 =============================
4377: You&#39;ll need to tell it to do so manually by using (or with some additional tooling around) the svnsync copy-revprops subcommand, which simply rereplicates all the revision properties for a particular revision or range thereof.
7471: Use it to resynchronize the revision properties for a particular revision or range of revisions.
*****************************************************************
========================= CLASS #4232 =============================
4519: Because Apache is an extremely extensible server, it provides a number of features for free, such as encrypted SSL communication, logging, integration with a number of third-party authentication systems, and limited built-in web browsing of repositories.
4546: No built-in web browsing.
*****************************************************************
========================= CLASS #4244 =============================
4531: Comparison of Subversion server options Feature Apache + mod_dav_svn svnserve svnserve over SSH Authentication options HTTP Basic or Digest auth, X.509 certificates, LDAP, NTLM, or any other mechanism available to Apache httpd CRAM-MD5 by default; LDAP, NTLM, or any other mechanism available to SASL SSH User account options Private users file, or other mechanisms available to Apache httpd (LDAP, SQL, etc.)
4532: Private users file, or other mechanisms available to SASL (LDAP, SQL, etc.)
*****************************************************************
========================= CLASS #4255 =============================
4543: Why you might want to avoid it: By default, only one authentication method is available, the network protocol is not encrypted, and the server stores clear text passwords.
4551: Why you might want to avoid it: Only one choice of authentication method is available.
*****************************************************************
========================= CLASS #4257 =============================
4545: No advanced logging facilities.
4552: No advanced logging facilities.
*****************************************************************
========================= CLASS #4295 =============================
4586: Invoking the Server svnserve running There are a few different ways to run the svnserve program: Run svnserve as a standalone daemon, listening for requests.
4590: Run svnserve as a launchd job.
*****************************************************************
========================= CLASS #4369 =============================
4662: It&#39;s also possible, of course, for the client to be externally authenticated via a tunnel agent, such as ssh .
5234: It&#39;s also possible, however, to define finer-grained access rules.
*****************************************************************
========================= CLASS #4470 =============================
4764: In this section, we&#39;ll show how to control the exact svnserve command executed by sshd , as well as how to have multiple users share a single system account.
4776: It&#39;s also possible to have multiple users share a single account.
*****************************************************************
========================= CLASS #4507 =============================
4804: Once you have all of those components, the process of networking your repository is as simple as: Getting httpd up and running with the mod_dav module Installing the mod_dav_svn backend to mod_dav , which uses Subversion&#39;s libraries to access the repository Configuring your httpd.conf file to export (or expose) the repository You can accomplish the first two items either by compiling httpd and Subversion from source code or by installing prebuilt binary packages of them on your system.
5874: After all, Subversion uses Subversion&#39;s APIs, too.
*****************************************************************
========================= CLASS #4573 =============================
4870: You&#39;ll need to ensure that the mod_auth_digest module is available (instead of mod_auth_basic ), and then make a few small variations on our prior example: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthDigestProvider file AuthUserFile /etc/svn-auth.htdigest # Authorization: Authenticated users only Require valid-user &lt;/Location&gt; Notice that AuthType is now set to Digest , and we specify a different path for AuthUserFile .
4882: The example from allows only clients that successfully authenticate to do anything with the Subversion repository: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Authenticated users only Require valid-user &lt;/Location&gt; Sometimes you don&#39;t need to run such a tight ship.
4888: &lt;Location /svn&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Authenticated users only for non-read-only # (write) operations; allow anonymous reads &lt;LimitExcept GET PROPFIND OPTIONS REPORT&gt; Require valid-user &lt;/LimitExcept&gt; &lt;/Location&gt; These are only a few simple examples.
*****************************************************************
========================= CLASS #4578 =============================
4875: As was the case with the AuthBasicProvider directive, file is the default value of the AuthDigestProvider option, so this line is not strictly required unless you need to override a different value thereof inherited from a broader configuration context.
5191: 5 is the default value.
*****************************************************************
========================= CLASS #4602 =============================
4901: (See .)
4904: (See .)
4910: (See .)
*****************************************************************
========================= CLASS #4605 =============================
4905: A sample configuration for authenticated access &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Path-based access control; authenticated users only AuthzSVNAccessFile /path/to/access/file Require valid-user &lt;/Location&gt; A third very popular pattern is to allow a combination of authenticated and anonymous access.
4911: A sample configuration for mixed authenticated/anonymous access &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn # Authentication: Digest AuthName &quot;Subversion repository&quot; AuthType Digest AuthUserFile /etc/svn-auth.htdigest # Authorization: Path-based access control; try anonymous access # first, but authenticate if necessary AuthzSVNAccessFile /path/to/access/file Satisfy Any Require valid-user &lt;/Location&gt; The next step is to create the authorization file containing access rules for particular paths within the repository.
4926: Disabling path checks altogether &lt;Location /repos&gt; DAV svn SVNParentPath /var/svn SVNPathAuthz off &lt;/Location&gt; The SVNPathAuthz directive is on by default.
*****************************************************************
========================= CLASS #4692 =============================
4999: Use r= REV , where REV is a revision number, to specify an operative revision.
5510: REV (where REV is a revision number).
*****************************************************************
========================= CLASS #4794 =============================
5104: Then log into the master server and configure each of the slave repository URIs to receive data from the master repository on the local disk: $ svnsync init http://slave1.example.com/svn-proxy-sync \ file:///var/svn/repos Copied properties for revision 0.
5105: $ svnsync init http://slave2.example.com/svn-proxy-sync \ file:///var/svn/repos Copied properties for revision 0.
5106: $ svnsync init http://slave3.example.com/svn-proxy-sync \ file:///var/svn/repos Copied properties for revision 0.
*****************************************************************
========================= CLASS #4795 =============================
5107: # Perform the initial replication $ svnsync sync http://slave1.example.com/svn-proxy-sync \ file:///var/svn/repos Transmitting file data .... Committed revision 1.
5111: $ svnsync sync http://slave2.example.com/svn-proxy-sync \ file:///var/svn/repos Transmitting file data .... Committed revision 1.
5115: $ svnsync sync http://slave3.example.com/svn-proxy-sync \ file:///var/svn/repos Transmitting file data .... Committed revision 1.
*****************************************************************
========================= CLASS #4837 =============================
5161: mod_dav_svn configuration directives The following configuration directives are recognized and supported by Subversion&#39;s Apache HTTP Server module, mod_dav_svn .
5221: mod_authz_svn configuration directives The following configuration directives are provided by mod_authz_svn , Subversion&#39;s path-based authorization Apache HTTP Server module.
*****************************************************************
========================= CLASS #4853 =============================
5177: The default value of this directive is On .
5182: The default value of this directive is Off .
5185: The default value of this directive is Off .
5188: The default value of this directive is Off .
5204: The default value of this directive is On .
5227: The default value of this directive is On .
5229: The default value of this directive is On .
5231: The default value of this directive is On .
*****************************************************************
========================= CLASS #4856 =============================
5183: SVNCacheFullTexts On|Off When set to On , this tells Subversion to cache content fulltexts if sufficient in-memory cache is available, which could offer a significant performance benefit to the server.
5186: SVNCacheTextDeltas On|Off When set to On , this tells Subversion to cache content deltas if sufficient in-memory cache is available, which could offer a significant performance benefit to the server.
*****************************************************************
========================= CLASS #4857 =============================
5184: (See also the SVNInMemoryCacheSize directive.)
5187: (See also the SVNInMemoryCacheSize directive.)
*****************************************************************
========================= CLASS #4861 =============================
5193: This directive is optional.
5207: This directive is optional.
*****************************************************************
========================= CLASS #4868 =============================
5200: In a configuration block for a Subversion repository, either this directive or SVNPath must be present, but not both.
5202: In a configuration block for a Subversion repository, either this directive or SVNParentPath must be present, but not both.
*****************************************************************
========================= CLASS #5030 =============================
5372: Assuming you have a Unix-like operating system, a straightforward approach might be to place every potential repository user into a new svn group, and make the repository wholly owned by that group.
5390: Make the repository wholly owned by that group.
*****************************************************************
========================= CLASS #5095 =============================
5439: [0-9]* *.a *.pyc *.pyo *.rej *~ #*# .#* .
5486: [0-9]* *.a *.pyc *.pyo *.rej *~ #*# .#* .
*****************************************************************
========================= CLASS #5106 =============================
5451: store-passwords This option has been deprecated from the config file.
5454: store-auth-creds This option has been deprecated from the config file.
*****************************************************************
========================= CLASS #5107 =============================
5452: It now lives as a per-server configuration item in the servers configuration area.
5455: It now lives as a per-server configuration item in the servers configuration area.
*****************************************************************
========================= CLASS #5109 =============================
5458: Valid options in this section are: diff-cmd This specifies the absolute path of a differencing program, used when Subversion generates diff output (such as when using the svn diff command).
5465: diff3-cmd This specifies the absolute path of a three-way differencing program.
*****************************************************************
========================= CLASS #5110 =============================
5459: By default, Subversion uses an internal differencing library setting this option will cause it to perform this task using an external program.
5467: By default, Subversion uses an internal differencing library setting this option will cause it to perform this task using an external program.
*****************************************************************
========================= CLASS #5111 =============================
5460: See for more details on using such programs.
5468: See for more details on using such programs.
5473: See for more details on using such programs.
*****************************************************************
========================= CLASS #5182 =============================
5541: (Note that this setting is only honored by Subversion&#39;s Neon-based HTTP provider module.)
5576: This setting is only honored by Subversion&#39;s Neon-based HTTP provider module.
*****************************************************************
========================= CLASS #5184 =============================
5543: The default value is yes (though compression will occur only if that capability is compiled into the network layer).
5580: The default value is yes .
*****************************************************************
========================= CLASS #5185 =============================
5544: Set this to no to disable compression, such as when debugging network transmissions.
5581: Set this to no to disable this on-disk password caching.
5591: Set this to no to disable this passphrase caching.
*****************************************************************
========================= CLASS #5195 =============================
5554: It defaults to an empty value, which means that Subversion will not attempt to route HTTP requests through a proxy computer, and will instead attempt to contact the destination machine directly.
5556: It defaults to an empty value.
5558: It defaults to an empty value.
5560: It defaults to an empty value.
*****************************************************************
========================= CLASS #5196 =============================
5555: http-proxy-password This specifies the password to supply to the proxy machine.
5559: http-proxy-username This specifies the username to supply to the proxy machine.
*****************************************************************
========================= CLASS #5221 =============================
5588: The default setting is ask , which causes the Subversion client to ask you each time a new password is about to be added to the ~/.subversion/auth/ caching area.
5593: The default value of this option is ask , which causes the Subversion client to ask you each time a new client certificate passphrase is about to be added to the ~/.subversion/auth/ caching area.
*****************************************************************
========================= CLASS #5313 =============================
5685: and are templates for external diff tool wrappers in the Python and Windows batch scripting languages, respectively.
5702: and are templates for external three-way differencing tool wrappers in the Python and Windows batch scripting languages, respectively.
5722: and are templates for external merge tool wrappers in the Python and Windows batch scripting languages, respectively.
*****************************************************************
========================= CLASS #5314 =============================
5686: diffwrap.py #!/usr/bin/env python import sys import os # Configure your favorite diff program here.
5703: diff3wrap.py #!/usr/bin/env python import sys import os # Configure your favorite three-way diff program here.
5723: mergewrap.py #!/usr/bin/env python import sys import os # Configure your favorite merge program here.
*****************************************************************
========================= CLASS #5315 =============================
5687: DIFF = &quot;/usr/local/bin/my-diff-tool&quot; # Subversion provides the paths we need as the last two parameters.
5704: DIFF3 = &quot;/usr/local/bin/my-diff3-tool&quot; # Subversion provides the paths we need as the last three parameters.
*****************************************************************
========================= CLASS #5316 =============================
5688: LEFT = sys.argv[-2] RIGHT = sys.argv[-1] # Call the diff command (change the following line to make sense for # your diff program).
5694: SET LEFT=%6 SET RIGHT=%7 REM Call the diff command (change the following line to make sense for REM your diff program).
*****************************************************************
========================= CLASS #5318 =============================
5690: # Any other errorcode will be treated as fatal.
5696: REM Any other errorcode will be treated as fatal.
5709: Any other errorcode will be treated as fatal.
5718: Any other errorcode will be treated as fatal.
5727: # Any other errorcode will be treated as fatal.
5732: REM Any other errorcode will be treated as fatal.
*****************************************************************
========================= CLASS #5319 =============================
5691: diffwrap.bat @ECHO OFF REM Configure your favorite diff program here.
5710: diff3wrap.bat @ECHO OFF REM Configure your favorite three-way diff program here.
5728: mergewrap.bat @ECHO OFF REM Configure your favorite merge program here.
*****************************************************************
========================= CLASS #5320 =============================
5692: SET DIFF=&quot;C:\Program Files\Funky Stuff\My Diff Tool.exe&quot; REM Subversion provides the paths we need as the last two parameters.
5711: SET DIFF3=&quot;C:\Program Files\Funky Stuff\My Diff3 Tool.exe&quot; REM Subversion provides the paths we need as the last three parameters.
5729: SET DIFF3=&quot;C:\Program Files\Funky Stuff\My Merge Tool.exe&quot; REM Get the paths provided by Subversion.
*****************************************************************
========================= CLASS #5329 =============================
5706: cmd = [DIFF3, &#39;--older&#39;, OLDER, &#39;--mine&#39;, MINE, &#39;--yours&#39;, YOURS] os.execv(cmd[0], cmd) # After performing the merge, this script needs to print the contents # of the merged file to stdout.
5726: cmd = [DIFF3, &#39;--base&#39;, BASE, &#39;--mine&#39;, MINE, &#39;--theirs&#39;, THEIRS, &#39;--outfile&#39;, MERGED] os.execv(cmd[0], cmd) # Return an errorcode of 0 if the conflict was resolved; 1 otherwise.
*****************************************************************
========================= CLASS #5330 =============================
5708: # Return an errorcode of 0 on successful merge, 1 if unresolved conflicts # remain in the result.
5717: REM Return an errorcode of 0 on successful merge, 1 if unresolved conflicts REM remain in the result.
*****************************************************************
========================= CLASS #5434 =============================
5825: - with Cyrus SASL authentication - handles &#39;svn&#39; scheme * ra_local : Module for accessing a repository on local disk.
5826: - handles &#39;file&#39; scheme * ra_serf : Module for accessing a repository via WebDAV protocol using serf.
*****************************************************************
========================= CLASS #5552 =============================
5946: */ #define INT_ERR(expr) \ do { \ svn_error_t *__temperr = (expr); \ if (__temperr) \ { \ svn_error_clear(__temperr); \ return 1; \ } \ return 0; \ } while (0) /* Create a new directory at the path NEW_DIRECTORY in the Subversion * repository located at REPOS_PATH.
7291: mkdir URL Create a new directory at URL .
*****************************************************************
========================= CLASS #5567 =============================
5962: */ printf(&quot;Directory &#39;%s&#39; was successfully added as new revision &quot; &quot;&#39;%ld&#39;.\n&quot;, new_directory, youngest_rev); } else if (err-&gt;apr_err == SVN_ERR_FS_CONFLICT) { /* Uh-oh.
5965: */ printf(&quot;A conflict occurred at path &#39;%s&#39; while attempting &quot; &quot;to add directory &#39;%s&#39; to the repository at &#39;%s&#39;.\n&quot;, conflict_str, new_directory, repos_path); } else { /* Some other error has occurred.
5967: */ printf(&quot;An error occurred while attempting to add directory &#39;%s&#39; &quot; &quot;to the repository at &#39;%s&#39;.\n&quot;, new_directory, repos_path); } INT_ERR(err); } Note that in , the code could just as easily have committed the transaction using svn_fs_commit_txn() .
*****************************************************************
========================= CLASS #5578 =============================
5977: full_path = directory + &#39;/&#39; + name # If the entry is a directory, recurse.
6869: &#39;+&#39; History scheduled with commit.
*****************************************************************
========================= CLASS #5587 =============================
5986: repos_path = svn.core.svn_dirent_canonicalize(sys.argv[1]) # Do the real work.
6000: wc_path = svn.core.svn_dirent_canonicalize(args[0]) # Do the real work.
*****************************************************************
========================= CLASS #5596 =============================
5995: A Python status crawler #!/usr/bin/env python &quot;&quot;&quot;Crawl a working copy directory, printing status information.&quot;&quot;&quot; import sys import os.path import getopt import svn.core, svn.client, svn.wc def generate_status_code(status): &quot;&quot;&quot;Translate a status value into a single-character status code, using the same logic as the Subversion command-line client.&quot;&quot;&quot; code_map = { svn.wc.svn_wc_status_none : &#39; &#39;, svn.wc.svn_wc_status_normal : &#39; &#39;, svn.wc.svn_wc_status_added : &#39;A&#39;, svn.wc.svn_wc_status_missing : &#39;!&#39;, svn.wc.svn_wc_status_incomplete : &#39;!&#39;, svn.wc.svn_wc_status_deleted : &#39;D&#39;, svn.wc.svn_wc_status_replaced : &#39;R&#39;, svn.wc.svn_wc_status_modified : &#39;M&#39;, svn.wc.svn_wc_status_conflicted : &#39;C&#39;, svn.wc.svn_wc_status_obstructed : &#39;~&#39;, svn.wc.svn_wc_status_ignored : &#39;I&#39;, svn.wc.svn_wc_status_external : &#39;X&#39;, svn.wc.svn_wc_status_unversioned : &#39;?&#39;, } return code_map.get(status, &#39;?&#39;) def do_status(wc_path, verbose, prefix): # Build a client context baton.
6851: &#39;A&#39; Item is scheduled for addition.
6852: &#39;D&#39; Item is scheduled for deletion.
6853: &#39;M&#39; Item has been modified.
6854: &#39;R&#39; Item has been replaced in your working copy.
6857: &#39;X&#39; Item is present because of an externals definition.
6859: &#39;?&#39; Item is not under version control.
6864: &#39;M&#39; Properties for this item have been modified.
6865: &#39;C&#39; Properties for this item are in conflict with property updates received from the repository.
6867: &#39;L&#39; Item is locked.
6871: &#39;S&#39; Item is switched.
*****************************************************************
========================= CLASS #5644 =============================
6058: Licensor waives the exclusive right to collect, whether individually or via a performance rights society (e.g.
6063: Licensor waives the exclusive right to collect, whether individually or via a music rights agency or designated agent (e.g.
*****************************************************************
========================= CLASS #5645 =============================
6059: ASCAP, BMI, SESAC), royalties for the public performance or public digital performance (e.g.
6067: SoundExchange), royalties for the public digital performance (e.g.
*****************************************************************
========================= CLASS #5647 =============================
6062: Mechanical Rights and Statutory Royalties.
6065: f. Webcasting Rights and Statutory Royalties.
*****************************************************************
========================= CLASS #5648 =============================
6064: Harry Fox Agency), royalties for any phonorecord You create from the Work (&quot;cover version&quot;) and distribute, subject to the compulsory license created by 17 USC Section 115 of the US Copyright Act (or the equivalent in other jurisdictions).
6068: webcast) of the Work, subject to the compulsory license created by 17 USC Section 114 of the US Copyright Act (or the equivalent in other jurisdictions).
*****************************************************************
========================= CLASS #5660 =============================
6080: If You create a Collective Work, upon notice from any Licensor You must, to the extent practicable, remove from the Collective Work any reference to such Licensor or the Original Author, as requested.
6081: If You create a Derivative Work, upon notice from any Licensor You must, to the extent practicable, remove from the Derivative Work any reference to such Licensor or the Original Author, as requested.
*****************************************************************
========================= CLASS #5672 =============================
6097: Miscellaneous a. Each time You distribute or publicly digitally perform the Work or a Collective Work, the Licensor offers to the recipient a license to the Work on the same terms and conditions as the license granted to You under this License.
6098: b. Each time You distribute or publicly digitally perform a Derivative Work, Licensor offers to the recipient a license to the original Work on the same terms and conditions as the license granted to You under this License.
*****************************************************************
========================= CLASS #5732 =============================
6161: If the start-commit hook program returns a nonzero exit value, the commit process is stopped, the commit transaction is destroyed, and anything printed to stderr is marshalled back to the client.
6172: If the pre-commit hook program returns a nonzero exit value, the commit is aborted, the commit transaction is removed, and anything printed to stderr is marshalled back to the client.
6199: If the pre-lock hook program returns a nonzero exit value, the lock action is aborted and anything printed to stderr is marshalled back to the client.
6217: If the pre-unlock hook program returns a nonzero exit value, the unlock action is aborted and anything printed to stderr is marshalled back to the client.
*****************************************************************
========================= CLASS #5750 =============================
6180: If the post-commit hook returns a nonzero exit status, the commit will not be aborted since it has already completed.
6192: If the post-revprop-change hook returns a nonzero exit status, the change will not be aborted since it has already completed.
6207: If the post-lock hook returns a nonzero exit status, the lock will not be aborted since it has already completed.
6221: If the post-unlock hook returns a nonzero exit status, the unlock will not be aborted since it has already completed.
*****************************************************************
========================= CLASS #5751 =============================
6181: However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures.
6193: However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures.
6208: However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures.
6222: However, anything that the hook printed to stderr will be marshalled back to the client, making it easier to diagnose hook failures.
*****************************************************************
========================= CLASS #5753 =============================
6183: pre-revprop-change REPOS-PATH REVISION USER PROPNAME ACTION Description The pre-revprop-change hook is run immediately prior to the modification of a revision property when performed outside the scope of a normal commit.
6189: post-revprop-change REPOS-PATH REVISION USER PROPNAME ACTION Description The post-revprop-change hook is run immediately after the modification of a revision property when performed outside the scope of a normal commit.
*****************************************************************
========================= CLASS #5757 =============================
6187: Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Revision whose property is about to be modified Authenticated username attempting the property change Name of the property changed Change description: A (added), D (deleted), or M (modified) Additionally, Subversion passes the intended new value of the property to the hook program via standard input.
6194: Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Revision whose property was modified Authenticated username of the person making the change Name of the property changed Change description: A (added), D (deleted), or M (modified) Additionally, Subversion passes to the hook program, via standard input, the previous value of the property.
6209: Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Authenticated username of the person who locked the paths Additionally, the list of paths locked is passed to the hook program via standard input, one path per line.
6223: Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Authenticated username of the person who unlocked the paths Additionally, the list of paths unlocked is passed to the hook program via standard input, one path per line.
*****************************************************************
========================= CLASS #5760 =============================
6191: It is typically used to send email notification of the property change.
6206: It is typically used to send email notification of the lock event.
6220: It is typically used to send email notification of the unlock event.
*****************************************************************
========================= CLASS #5769 =============================
6204: Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Versioned path that is to be locked Authenticated username of the person attempting the lock Comment provided when the lock was created 1 if the user is attempting to steal an existing lock; 0 otherwise Common uses Access control hook scripts post-lock post-lock Notification of a successful path lock.
6218: Input parameter(s) The command-line arguments passed to the hook program, in order, are: Repository path Versioned path which is to be unlocked Authenticated username of the person attempting the unlock Lock token associated with the lock which is to be removed 1 if the user is attempting to break the lock; 0 otherwise Common uses Access control hook scripts post-unlock post-unlock Notification of a successful path unlock.
*****************************************************************
========================= CLASS #5770 =============================
6205: post-lock REPOS-PATH USER Description The post-lock hook runs after one or more paths have been locked.
6219: post-unlock REPOS-PATH USER Description The post-unlock hook runs after one or more paths have been unlocked.
*****************************************************************
========================= CLASS #5796 =============================
6242: mine-full ( mf ) Resolve conflicted files by preserving all local modifications and discarding all changes fetched from the server during the operation which caused the conflict.
6243: theirs-full ( tf ) Resolve conflicted files by discarding all local modifications and integrating all changes fetched from the server during the operation which caused the conflict.
*****************************************************************
========================= CLASS #5797 =============================
6244: mine-conflict ( mc ) Resolve conflicted files by preferring local modifications over the changes fetched from the server in conflicting regions of each file&#39;s content.
6245: theirs-conflict ( tc ) Resolve conflicted files by preferring the changes fetched from the server over local modifications in conflicting regions of each file&#39;s content.
*****************************************************************
========================= CLASS #5808 =============================
6256: You can use this option multiple times to specify sets of changelists.
6264: You can use this option multiple times to change multiple option values simultaneously.
7307: You can use this option multiple times to change multiple option values simultaneously.
7356: You can use this option multiple times to change multiple option values simultaneously.
7447: You can use this option multiple times to change multiple option values simultaneously.
*****************************************************************
========================= CLASS #5809 =============================
6257: --config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory).
6969: --config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory).
7301: The following is a list of the options supported by this tool: --config-dir DIR Read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory).
7351: Options in svnrdump are global, just as they are in svn and svnadmin : svnrdump Options --config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory).
7441: --config-dir DIR Instructs Subversion to read configuration information from the specified directory instead of the default location ( .subversion in the user&#39;s home directory).
*****************************************************************
========================= CLASS #5810 =============================
6258: This option is accepted by all svn subcommands.
6265: This option is accepted by all svn subcommands.
6317: This option is accepted by all svn subcommands.
6329: This option is accepted by all svn subcommands.
6342: This option is accepted by all svn subcommands.
6389: This option is accepted by all svn subcommands.
6393: This option is accepted by all svn subcommands.
*****************************************************************
========================= CLASS #5811 =============================
6259: --config-option CONFSPEC Sets, for the duration of the command, the value of a runtime configuration option.
7302: --config-option CONFSPEC Set, for the duration of the command, the value of a runtime configuration option.
7352: --config-option FILE : SECTION : OPTION =[ VALUE ] Sets, for the duration of the command, the value of a runtime configuration option.
7442: --config-option CONFSPEC Sets, for the duration of the command, the value of a runtime configuration option.
*****************************************************************
========================= CLASS #5812 =============================
6260: CONFSPEC is a string which specifies the configuration option namespace, name and value that you&#39;d like to assign, formatted as FILE : SECTION : OPTION =[ VALUE ].
7303: CONFSPEC is a string which specifies the configuration option namespace, name and value that you&#39;d like to assign, formatted as FILE : SECTION : OPTION =[ VALUE ].
7443: CONFSPEC is a string which specifies the configuration option namespace, name and value that you&#39;d like to assign, formatted as FILE : SECTION : OPTION =[ VALUE ].
*****************************************************************
========================= CLASS #5813 =============================
6261: In this syntax, FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change.
7304: In this syntax, FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change.
7353: FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change.
7444: In this syntax, FILE and SECTION are the runtime configuration file (either config or servers ) and the section thereof, respectively, which contain the option whose value you wish to change.
*****************************************************************
========================= CLASS #5814 =============================
6262: OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option.
7305: OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option.
7354: OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option.
7445: OPTION is, of course, the option itself, and VALUE the value (if any) you wish to assign to the option.
*****************************************************************
========================= CLASS #5815 =============================
6263: For example, to temporarily disable the use of the automatic property setting feature, use --config-option=config:miscellany:enable-auto-props=no .
7306: For example, to temporarily disable the use of the automatic property setting feature, use --config-option=config:miscellany:enable-auto-props=no .
7355: For example, to temporarily disable the use of the automatic property setting feature, use --config-option=servers:global:http-library=serf .
7446: For example, to temporarily disable the use of the automatic property setting feature, use --config-option=servers:global:http-library=serf .
*****************************************************************
========================= CLASS #5829 =============================
6279: --extensions ( -x ) ARG Specifies customizations which Subversion should make when performing difference calculations.
7196: --extensions ( -x ) ARG Specifies customizations which Subversion should make when performing difference calculations.
*****************************************************************
========================= CLASS #5830 =============================
6280: Valid extensions include: --ignore-space-change ( -b ) Ignore changes in the amount of white space.
7197: Valid extensions include: --ignore-space-change ( -b ) Ignore changes in the amount of white space.
*****************************************************************
========================= CLASS #5831 =============================
6281: --ignore-all-space ( -w ) Ignore all white space.
7198: --ignore-all-space ( -w ) Ignore all white space.
*****************************************************************
========================= CLASS #5832 =============================
6282: --ignore-eol-style Ignore changes in EOL (end-of-line) style.
7199: --ignore-eol-style Ignore changes in EOL (end-of-line) style.
*****************************************************************
========================= CLASS #5833 =============================
6283: --show-c-function ( -p ) Show C function names in the diff output.
7200: --show-c-function ( -p ) Show C function names in the diff output.
*****************************************************************
========================= CLASS #5834 =============================
6284: --unified ( -u ) Show three lines of unified diff context.
7201: --unified ( -u ) Show three lines of unified diff context.
*****************************************************************
========================= CLASS #5836 =============================
6286: If you wish to pass multiple arguments, you must enclose all of them in quotes.
7204: If you wish to pass multiple arguments, you must enclose all of them in quotes.
*****************************************************************
========================= CLASS #5837 =============================
6287: Note that when Subversion is configured to invoke an external diff command, the value of the --extension ( -x ) option isn&#39;t restricted to the previously mentioned options, but may be any additional arguments which Subversion should pass to that command.
7203: Note that when Subversion is configured to invoke an external diff command, the value of the --extension ( -x ) option isn&#39;t restricted to the previously mentioned options, but may be any additional arguments which Subversion should pass to that command.
*****************************************************************
========================= CLASS #5838 =============================
6288: --file ( -F ) FILENAME Uses the contents of the named file for the specified subcommand.
6971: --file ( -F ) FILENAME Uses the contents of the named file for the specified subcommand.
*****************************************************************
========================= CLASS #5849 =============================
6299: --help ( -h , -? )
7311: --help ( -h , -? )
*****************************************************************
========================= CLASS #5865 =============================
6315: --new ARG Uses ARG as the newer target (for use with svn diff ).
6336: --old ARG Uses ARG as the older target (for use with svn diff ).
*****************************************************************
========================= CLASS #5866 =============================
6316: --no-auth-cache Prevents caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories.
7314: --no-auth-cache Prevent caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories.
7358: --no-auth-cache Prevents caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories.
7449: --no-auth-cache Prevents caching of authentication information (e.g., username and password) in the Subversion runtime configuration directories.
*****************************************************************
========================= CLASS #5868 =============================
6319: --no-diff-deleted Prevents Subversion from printing differences for deleted files.
7207: --no-diff-deleted Prevents svnlook diff from printing differences for deleted files.
7209: --no-diff-added Prevents svnlook diff from printing differences for added files.
*****************************************************************
========================= CLASS #5869 =============================
6320: The default behavior when you remove a file is for svn diff to print the same differences that you would see if you had kept the file but removed all of its content.
7208: The default behavior when a file is deleted in a transaction/revision is to print the same differences that you would see if you had left the file but removed all the content.
7210: The default behavior when you add a file is to print the same differences that you would see if you had added the entire contents of an existing (empty) file.
*****************************************************************
========================= CLASS #5875 =============================
6328: This is useful if you&#39;re running Subversion inside an automated script and it&#39;s more appropriate to have Subversion fail than to prompt for more information.
7360: This is useful if you&#39;re running Subversion inside an automated script and it&#39;s more appropriate to have Subversion fail than to prompt for more information.
7451: This is useful if you&#39;re running Subversion inside an automated script and it&#39;s more appropriate to have Subversion fail than to prompt for more information.
*****************************************************************
========================= CLASS #5877 =============================
6332: Most subcommands recurse by default, but some do not.
6346: (Most subcommands recurse by default.)
*****************************************************************
========================= CLASS #5884 =============================
6340: --password PASSWD Specifies the password to use when authenticating against a Subversion server.
6391: --username NAME Specifies the username to use when authenticating against a Subversion server.
7361: --password PASSWD Specifies the password to use when authenticating against a Subversion server.
7366: --username NAME Specifies the username to use when authenticating against a Subversion server.
*****************************************************************
========================= CLASS #5885 =============================
6341: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
6392: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7322: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7324: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7362: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7367: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7455: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7458: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7462: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
7464: If not provided, or if incorrect, Subversion will prompt you for this information as needed.
*****************************************************************
========================= CLASS #5886 =============================
6343: --quiet ( -q ) Requests that the client print only essential information while performing an operation.
7363: --quiet ( -q ) Requests that the client print only essential information while performing an operation.
7452: --quiet ( -q ) Requests that the client print only essential information while performing an operation.
7521: --quiet ( -q ) Requests that the program print only essential information while performing an operation.
*****************************************************************
========================= CLASS #5890 =============================
6348: Used with the svn merge subcommand to merge changes from a feature branch back into the feature branch&#39;s ancestor branch.
6665: Reintegrate merges merge changes from a feature branch ( SOURCE ) back into the feature branch&#39;s ancestor branch ( TARGET_WCPATH ), see and .
*****************************************************************
========================= CLASS #5902 =============================
6361: --revprop Operates on a revision property instead of a property specific to a file or directory.
7213: --revprop Operates on a revision property instead of a property specific to a file or directory.
*****************************************************************
========================= CLASS #5903 =============================
6362: This option requires that you also pass a revision with the --revision ( -r ) option.
7214: This option requires that you also pass a revision with the --revision ( -r ) option.
*****************************************************************
========================= CLASS #5907 =============================
6366: If --limit is used, it restricts the number of log messages searched, rather than restricting the output to a particular number of matching log messages.
6653: Therefore, if --limit is used, it restricts the number of log messages searched, rather than restricting the output to a particular number of matching log messages.
*****************************************************************
========================= CLASS #5908 =============================
6367: The search pattern may include &quot;glob syntax&quot; wildcards: ?
6641: The search pattern may include &quot;glob syntax&quot; wildcards: ?
*****************************************************************
========================= CLASS #5909 =============================
6369: * Matches a sequence of arbitrary characters.
6643: * Matches a sequence of arbitrary characters.
*****************************************************************
========================= CLASS #5910 =============================
6370: [ABC] Matches any of the characters listed inside the brackets.
6644: [ABC] Matches any of the characters listed inside the brackets.
*****************************************************************
========================= CLASS #5934 =============================
6398: With --quiet ( -q ) it prints only the version number in a compact form.
6848: With --quiet ( -q ), it prints only summary information about locally modified items.
*****************************************************************
========================= CLASS #5947 =============================
6411: To override the default behavior and force Subversion to recurse into already-versioned directories, pass the --force option: $ svn add versioned-dir svn: warning: W150002: &#39;/home/cmpilato/projects/subversion/site&#39; is already un\ der version control $ svn add versioned-dir --force A versioned-dir/foo.c A versioned-dir/somedir/bar.c A (bin) versioned-dir/otherdir/docs/baz.doc svn subcommands blame svn blame (praise, annotate, ann) Show author and revision information inline for the specified files or URLs.
6412: svn blame TARGET[@REV]... Description Show author and revision information inline for the specified files or URLs.
6433: svn cat TARGET[@REV]... Description Output the contents of the specified files or URLs.
*****************************************************************
========================= CLASS #5950 =============================
6415: 5 harry Don&#39;t bother reading it.
6423: -Don&#39;t bother reading it.
6425: +Don&#39;t bother reading it.
6430: 4 jess Don&#39;t bother reading it.
6436: Don&#39;t bother reading it.
*****************************************************************
========================= CLASS #5951 =============================
6416: The boss is a knucklehead.
6424: The boss is a knucklehead.
6426: The boss is a knucklehead.
6431: The boss is a knucklehead.
6437: The boss is a knucklehead.
*****************************************************************
========================= CLASS #5960 =============================
6435: Options Examples If you want to view readme.txt in your repository without checking it out: $ svn cat http://svn.red-bean.com/repos/test/readme.txt This is a README file.
6441: $ svn cat -r 3 http://svn.red-bean.com/repos/test/readme.txt This is a README file.
*****************************************************************
========================= CLASS #5961 =============================
6438: INSTRUCTIONS ============ Step 1: Do this.
6442: INSTRUCTIONS ============ Step 1: Do this.
*****************************************************************
========================= CLASS #5962 =============================
6439: Step 2: Do that.
6443: Step 2: Do that.
*****************************************************************
========================= CLASS #5973 =============================
6453: If PATH is omitted, the basename of the URL will be used as the destination.
6570: If PATH is omitted, .
*****************************************************************
========================= CLASS #6002 =============================
6482: is used: $ svn cleanup $ svn cleanup /var/svn/working-copy svn subcommands commit svn commit (ci) Send changes from your working copy to the repository.
6483: svn commit [PATH...] Description Send changes from your working copy to the repository.
*****************************************************************
========================= CLASS #6020 =============================
6503: URL URL Complete server-side copy.
6699: URL URL Complete server-side rename.
*****************************************************************
========================= CLASS #6034 =============================
6518: Multiple URLs are committed atomically.
6690: Multiple directory URLs are committed atomically.
*****************************************************************
========================= CLASS #6062 =============================
6547: If TARGET is a working copy path, the default behavior (when no --revision ( -r ) option is provided) is to display the differences between the base and working copies of TARGET .
6587: If TARGET is a working copy path, the corresponding repository URL will be used.
*****************************************************************
========================= CLASS #6088 =============================
6576: $ svn import -m &quot;New import&quot; myproj \ http://svn.red-bean.com/repos/trunk/misc Adding myproj/sample.txt Transmitting file data ......... Committed revision 16.
6578: If that&#39;s what you want, simply add myproj to the end of the URL: $ svn import -m &quot;New import&quot; myproj \ http://svn.red-bean.com/repos/trunk/misc/myproj Adding myproj/sample.txt Transmitting file data ......... Committed revision 16.
*****************************************************************
========================= CLASS #6102 =============================
6593: Options Examples svn list is most useful if you want to see what files a repository has without downloading a working copy: $ svn list http://svn.red-bean.com/repos/test/support README.txt INSTALL examples/ You can pass the --verbose ( -v ) option for additional information, rather like the Unix command ls -l : $ svn list -v file:///var/svn/repos 16 sally 28361 Jan 16 23:18 README.txt 27 sally 0 Jan 18 15:27 INSTALL 24 harry Jan 18 11:27 examples/ You can also get svn list output in XML format with the --xml option: $ svn list --xml http://svn.red-bean.com/repos/test &lt;?xml version=&quot;1.0&quot;?&gt; &lt;lists&gt; &lt;list path=&quot;http://svn.red-bean.com/repos/test&quot;&gt; &lt;entry kind=&quot;dir&quot;&gt; &lt;name&gt;examples&lt;/name&gt; &lt;size&gt;0&lt;/size&gt; &lt;commit revision=&quot;24&quot;&gt; &lt;author&gt;harry&lt;/author&gt; &lt;date&gt;2008-01-18T06:35:53.048870Z&lt;/date&gt; &lt;/commit&gt; &lt;/entry&gt; ... &lt;/list&gt; &lt;/lists&gt; For further details, see the earlier section .
6601: For further details, see .
6925: For further details, see .
*****************************************************************
========================= CLASS #6110 =============================
6606: The default revision range for a local path is BASE:1 .
6609: The default revision range for a URL is HEAD:1 .
*****************************************************************
========================= CLASS #6136 =============================
6656: If TARGET_WCPATH is omitted, the changes are applied to the current working directory, unless the sources have identical basenames that match a file within the current working directory.
6705: As with most other working copy subcommands, if WCPATH is omitted, the changes are applied to the current working directory.
*****************************************************************
========================= CLASS #6194 =============================
6721: Index: changed-file =================================================================== --- changed-file (revision 4) +++ changed-file (working copy) @@ -1,6 +1,6 @@ The letters in a line of text Could make your day much better.
6725: Index: changed-file =================================================================== --- changed-file (revision 4) +++ changed-file (working copy) @@ -1,6 +1,6 @@ The letters in a line of text Could make your day much better.
*****************************************************************
========================= CLASS #6195 =============================
6722: But expanded into paragraphs, -I&#39;d tell of kangaroos and calves +I&#39;d tell of monkeys and giraffes Until you were all smiles and laughs From my letter made of letters.
6726: But expanded into paragraphs, -I&#39;d tell of kangaroos and calves +I&#39;d tell of monkeys and giraffes Until you were all smiles and laughs From my letter made of letters.
*****************************************************************
========================= CLASS #6196 =============================
6723: Property changes on: changed-file ___________________________________________________________________ Added: propname ## -0,0 +1 ## +propvalue Index: added-file =================================================================== --- added-file (revision 0) +++ added-file (working copy) @@ -0,0 +1 @@ +This is an added file.
6727: Property changes on: changed-file ___________________________________________________________________ Added: propname ## -0,0 +1 ## +propvalue Index: added-file =================================================================== --- added-file (revision 0) +++ added-file (working copy) @@ -0,0 +1 @@ +This is an added file.
*****************************************************************
========================= CLASS #6204 =============================
6734: The first form removes versioned properties in your working copy, and the second removes unversioned remote properties on a repository revision ( TARGET determines only which repository to access).
6739: The first form edits versioned properties in your working copy, and the second edits unversioned remote properties on a repository revision ( TARGET determines only which repository to access).
6755: The first form lists versioned properties in your working copy, and the second lists unversioned remote properties on a repository revision ( TARGET determines only which repository to access).
*****************************************************************
========================= CLASS #6212 =============================
6744: svn propget PROPNAME [TARGET[@REV]...] svn propget PROPNAME --revprop -r REV [URL] Description Print the value of a property on files, directories, or revisions.
6754: svn proplist [TARGET[@REV]...] svn proplist --revprop -r REV [TARGET] Description List all properties on files, directories, or revisions.
*****************************************************************
========================= CLASS #6276 =============================
6816: svn resolve [PATH...] Description Resolve conflicted state on working copy files or directories.
6823: Remove conflicted state on working copy files or directories.
6826: Remove conflicted state on working copy files or directories.
*****************************************************************
========================= CLASS #6279 =============================
6819: See for an in-depth look at resolving conflicts.
6828: See for an in-depth look at resolving conflicts.
6900: See for an in-depth look at switching.
*****************************************************************
========================= CLASS #6298 =============================
6843: svn subcommands status svn status (stat, st) Print the status of working copy files and directories.
6844: svn status [PATH...] Description Print the status of working copy files and directories.
*****************************************************************
========================= CLASS #6314 =============================
6872: The sixth column is populated with lock information: &#39; &#39; When --show-updates ( -u ) is used, this means the file is not locked.
6876: This appears only when --show-updates ( -u ) is used.
6879: This appears only when --show-updates ( -u ) is used.
6882: This appears only when --show-updates ( -u ) is used.
*****************************************************************
========================= CLASS #6316 =============================
6877: &#39;T&#39; File was locked in this working copy, but the lock has been stolen and is invalid.
6880: &#39;B&#39; File was locked in this working copy, but the lock has been broken and is invalid.
*****************************************************************
========================= CLASS #6318 =============================
6883: The seventh column is populated only if the item is the victim of a tree conflict: &#39; &#39; Item is not the victim of a tree conflict.
6884: &#39;C&#39; Item is the victim of a tree conflict.
*****************************************************************
========================= CLASS #6340 =============================
6908: As with most subcommands, you can limit the scope of the switch operation to a particular tree depth using the --depth option.
6934: As with most subcommands, you can limit the scope of the update operation to a particular tree depth using the --depth option.
*****************************************************************
========================= CLASS #6341 =============================
6909: Alternatively, you can use the --set-depth option to set a new sticky working copy depth on the switch target.
6935: Alternatively, you can use the --set-depth option to set a new sticky working copy depth on the update target.
*****************************************************************
========================= CLASS #6345 =============================
6913: U myproj/foo.txt U myproj/bar.txt U myproj/baz.c U myproj/qux.c Updated to revision 31.
6915: U myproj/foo.txt U myproj/bar.txt U myproj/baz.c U myproj/qux.c Updated to revision 31.
*****************************************************************
========================= CLASS #6366 =============================
6943: Skipped &#39;tempfile.tmp&#39; Updating &#39;paint&#39;: A palettes.c U brushes.c Updated to revision 60.
6946: Updated &#39;paint&#39; to r60.
*****************************************************************
========================= CLASS #6377 =============================
6958: Since svnadmin works via direct repository access (and thus can only be used on the machine that holds the repository), it refers to the repository with a path, not a URL.
7192: Since svnlook works via direct repository access (and thus can be used only on the machine that holds the repository), it refers to the repository with a path, not a URL.
*****************************************************************
========================= CLASS #6378 =============================
6959: Options in svnadmin are global, just as they are in svn : svnadmin Options --bdb-log-keep (Berkeley DB-specific.)
6962: --bdb-txn-nosync (Berkeley DB-specific.)
*****************************************************************
========================= CLASS #6391 =============================
6975: This option will cause the repository&#39;s UUID to be set to the UUID from the stream.
6977: This option will cause the UUID from the stream to be ignored.
*****************************************************************
========================= CLASS #6394 =============================
6979: --memory-cache-size ( -M ) ARG Configures the size (in Megabytes) of the extra in-memory cache used to minimize redundant operations.
7411: --memory-cache-size ( -M ) ARG Configures the size (in Megabytes) of the extra in-memory cache used to minimize redundant operations.
*****************************************************************
========================= CLASS #6395 =============================
6981: (This cache is used for FSFS-backed repositories only.)
7413: (This cache is used for FSFS-backed repositories only.)
*****************************************************************
========================= CLASS #6398 =============================
6984: See option --compatible-version .
6987: See option --compatible-version .
6990: See option --compatible-version .
*****************************************************************
========================= CLASS #6399 =============================
6985: When creating a new repository, use a format that is compatible with versions of Subversion earlier than Subversion 1.4.
6988: When creating a new repository, use a format that is compatible with versions of Subversion earlier than Subversion 1.5.
6991: When creating a new repository, use a format that is compatible with versions of Subversion earlier than Subversion 1.6.
*****************************************************************
========================= CLASS #6404 =============================
6994: --use-post-commit-hook When loading a dump file, runs the repository&#39;s post-commit hook after finalizing each newly loaded revision.
6996: --use-pre-commit-hook When loading a dump file, runs the repository&#39;s pre-commit hook before finalizing each newly loaded revision.
*****************************************************************
========================= CLASS #6405 =============================
6995: --use-post-revprop-change-hook When changing a revision property, runs the repository&#39;s post-revprop-change hook after changing the revision property.
6998: --use-pre-revprop-change-hook When changing a revision property, runs the repository&#39;s pre-revprop-change hook before changing the revision property.
*****************************************************************
========================= CLASS #6406 =============================
6997: If the hook fails, aborts the commit and terminates the load process.
6999: If the hook fails, aborts the modification and terminates.
*****************************************************************
========================= CLASS #6430 =============================
7024: If only LOWER is given, dump that one revision tree.
7075: If only LOWER is given, load that one revision.
*****************************************************************
========================= CLASS #6463 =============================
7061: svnadmin subcommands list-dblogs svnadmin list-dblogs Ask Berkeley DB which logfiles exist for a given Subversion repository (applies only to repositories using the bdb backend).
7065: svnadmin subcommands list-unused-dblogs svnadmin list-unused-dblogs Ask Berkeley DB which logfiles can be safely deleted (applies only to repositories using the bdb backend).
*****************************************************************
========================= CLASS #6464 =============================
7062: svnadmin list-dblogs REPOS_PATH Description Berkeley DB creates logs of all changes to the repository, which allow it to recover in the face of catastrophe.
7066: svnadmin list-unused-dblogs REPOS_PATH Description Berkeley DB creates logs of all changes to the repository, which allow it to recover in the face of catastrophe.
*****************************************************************
========================= CLASS #6465 =============================
7063: Unless you enable DB_LOG_AUTOREMOVE , the logfiles accumulate, although most are no longer used and can be deleted to reclaim disk space.
7067: Unless you enable DB_LOG_AUTOREMOVE , the logfiles accumulate, although most are no longer used and can be deleted to reclaim disk space.
*****************************************************************
========================= CLASS #6474 =============================
7078: Options Examples This shows the beginning of loading a repository from a backup file (made, of course, with svnadmin dump ): $ svnadmin load /var/svn/restored &lt; repos-backup &lt;&lt;&lt; Started new txn, based on original revision 1 * adding path : test ... done.
7080: Or if you want to load into a subdirectory: $ svnadmin load --parent-dir new/subdir/for/project \ /var/svn/restored &lt; repos-backup &lt;&lt;&lt; Started new txn, based on original revision 1 * adding path : test ... done.
*****************************************************************
========================= CLASS #6475 =============================
7079: * adding path : test/a ... done.
7081: * adding path : test/a ... done.
*****************************************************************
========================= CLASS #6489 =============================
7095: Options None Examples This lists the one locked file in the repository at /var/svn/repos : $ svnadmin lslocks /var/svn/repos Path: /tree.jpg UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753 Owner: harry Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005) Expires: Comment (1 line): Rework the uppermost branches on the bald cypress in the foreground.
7264: Options None Examples This describes the lock on the file tree.jpg : $ svnlook lock /var/svn/repos tree.jpg UUID Token: opaquelocktoken:ab00ddf0-6afb-0310-9cd0-dda813329753 Owner: harry Created: 2005-07-08 17:27:36 -0500 (Fri, 08 Jul 2005) Expires: Comment (1 line): Rework the uppermost branches on the bald cypress in the foreground.
*****************************************************************
========================= CLASS #6490 =============================
7096: svnadmin subcommands lstxns svnadmin lstxns Print the names of all uncommitted transactions.
7097: svnadmin lstxns REPOS_PATH Description Print the names of all uncommitted transactions.
*****************************************************************
========================= CLASS #6511 =============================
7122: svnadmin setlog REPOS_PATH -r REVISION FILE Description Set the log message on revision REVISION to the contents of FILE .
7126: svnadmin setrevprop REPOS_PATH -r REVISION NAME FILE Description Set the property NAME on revision REVISION to the contents of FILE .
*****************************************************************
========================= CLASS #6548 =============================
7161: Options Examples If we have a dump file from a repository with a number of different picnic-related directories in it, but we want to keep everything except the sandwiches part of the repository, we&#39;ll exclude only that path: $ svndumpfilter exclude sandwiches &lt; dumpfile &gt; filtered-dumpfile Excluding prefixes: &#39;/sandwiches&#39; Revision 0 committed as 0.
7174: Options Example If we have a dump file from a repository with a number of different picnic-related directories in it, but want to keep only the sandwiches part of the repository, we&#39;ll include only that path: $ svndumpfilter include sandwiches &lt; dumpfile &gt; filtered-dumpfile Including prefixes: &#39;/sandwiches&#39; Revision 0 committed as 0.
*****************************************************************
========================= CLASS #6549 =============================
7162: Revision 1 committed as 1.
7168: Revision 1 committed as 1.
7175: Revision 1 committed as 1.
7181: Revision 1 committed as 1.
*****************************************************************
========================= CLASS #6550 =============================
7163: Revision 2 committed as 2.
7169: Revision 2 committed as 2.
7176: Revision 2 committed as 2.
7182: Revision 2 committed as 2.
*****************************************************************
========================= CLASS #6551 =============================
7164: Revision 3 committed as 3.
7170: Revision 3 committed as 3.
7177: Revision 3 committed as 3.
7183: Revision 3 committed as 3.
*****************************************************************
========================= CLASS #6552 =============================
7165: Revision 4 committed as 4.
7171: Revision 4 committed as 4.
7178: Revision 4 committed as 4.
7184: Revision 4 committed as 4.
*****************************************************************
========================= CLASS #6554 =============================
7167: So, for example, if you wished to filter out paths which ended with .OLD , you would do the following: $ svndumpfilter exclude --pattern &quot;*.OLD&quot; &lt; dumpfile &gt; filtered-dumpfile Excluding prefix patterns: &#39;/*.OLD&#39; Revision 0 committed as 0.
7180: So, for example, if you wished to include only paths which ended with ks , you would do the following: $ svndumpfilter include --pattern &quot;*ks&quot; &lt; dumpfile &gt; filtered-dumpfile Including prefix patterns: &#39;/*ks&#39; Revision 0 committed as 0.
*****************************************************************
========================= CLASS #6555 =============================
7172: Dropped 3 node(s): &#39;/condiments/salt.OLD&#39; &#39;/condiments/pepper.OLD&#39; &#39;/toppings/cheese.OLD&#39; $ svndumpfilter subcommands include svndumpfilter include Filter out nodes without given prefixes from dump stream.
7179: Dropped 12 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/drinks&#39; &#39;/snacks&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ Beginning in Subversion 1.7, svndumpfilter can optionally treat the PATH_PREFIX s not merely as explicit substrings, but as file patterns instead.
7185: Dropped 11 node(s): &#39;/condiments&#39; &#39;/condiments/pepper&#39; &#39;/condiments/pepper.OLD&#39; &#39;/condiments/salt&#39; &#39;/condiments/salt.OLD&#39; &#39;/sandwiches&#39; &#39;/supplies&#39; &#39;/toppings&#39; &#39;/toppings/cheese&#39; &#39;/toppings/cheese.OLD&#39; &#39;/toppings/lettuce&#39; $ svndumpfilter subcommands help svndumpfilter help Help!
*****************************************************************
========================= CLASS #6557 =============================
7186: svndumpfilter help [SUBCOMMAND...] Description Displays the help message for svndumpfilter .
7254: Description Displays the help message for svnlook .
*****************************************************************
========================= CLASS #6589 =============================
7236: Options Examples This shows a newly added (empty) file, a modified binary file, and a renamed (that is, copied and deleted) file with modifications: $ svnlook diff -r 40 /var/svn/repos Copied: trunk/relish.txt (from rev 39, trunk/vendors/deli/pickle.txt) =================================================================== --- trunk/relish.txt (rev 0) +++ trunk/relish.txt 2013-01-29 20:39:17 UTC (rev 40) @@ -0,0 +1 @@ +Pickle relish is mostly made from cucumbers.
7240: $ svnlook diff -r 40 /var/svn/repos --diff-copy-from Copied: trunk/relish.txt (from rev 39, trunk/vendors/deli/pickle.txt) =================================================================== --- trunk/vendors/deli/pickle.txt 2013-01-29 20:39:17 UTC (rev 39) +++ trunk/relish.txt 2013-01-29 20:47:40 UTC (rev 3) @@ -1 +1 @@ -Pickles are mostly made from cucumbers.
7241: +Pickle relish is mostly made from cucumbers.
7244: $ svnlook diff -r 40 /var/svn/repos --no-diff-deleted Copied: trunk/relish.txt (from rev 39, trunk/vendors/deli/pickle.txt) =================================================================== --- trunk/relish.txt (rev 0) +++ trunk/relish.txt 2013-01-29 20:39:17 UTC (rev 40) @@ -0,0 +1 @@ +Pickle relish is mostly made from cucumbers.
*****************************************************************
========================= CLASS #6590 =============================
7237: Deleted: trunk/vendors/deli/pickle.txt =================================================================== --- trunk/vendors/deli/pickle.txt (rev 39) +++ trunk/vendors/deli/pickle.txt 2013-01-29 20:39:17 UTC (rev 49) @@ -1 +0,0 @@ -Pickles are mostly made from cucumbers.
7242: Deleted: trunk/vendors/deli/pickle.txt =================================================================== --- trunk/vendors/deli/pickle.txt (rev 39) +++ trunk/vendors/deli/pickle.txt 2013-01-29 20:39:17 UTC (rev 40) @@ -1 +0,0 @@ -Pickles are mostly made from cucumbers.
*****************************************************************
========================= CLASS #6603 =============================
7256: Options None svnlook subcommands history svnlook history Print information about the history of a path in the repository (or the root directory if no path is supplied).
7257: svnlook history REPOS_PATH [PATH_IN_REPOS] Description Print information about the history of a path in the repository (or the root directory if no path is supplied).
7271: svnlook proplist REPOS_PATH [PATH_IN_REPOS] Description List the properties of a path in the repository.
*****************************************************************
========================= CLASS #6606 =============================
7260: Options Examples This shows the info output for revision 40 in our sample repository: $ svnlook info -r 40 /var/svn/repos sally 2003-02-22 17:44:49 -0600 (Sat, 22 Feb 2003) 16 Rearrange lunch.
7267: Options Examples This shows the log output for revision 40 in our sample repository: $ svnlook log /var/svn/repos/ Rearrange lunch.
*****************************************************************
========================= CLASS #6632 =============================
7290: Actions svnmucc supports the following actions (and related arguments), which may be combined into ordered sequences on the command line: cp REV SRC-URL DST-URL Copy the file or directory located at SRC-URL in revision REV to DST-URL .
7294: rm URL Delete the file or directory located at URL .
*****************************************************************
========================= CLASS #6637 =============================
7297: propset NAME VALUE URL Set the value of the property NAME on the target URL to VALUE .
7298: propsetf NAME FILE URL Set the value of the property NAME on the target URL to the contents of the file FILE .
*****************************************************************
========================= CLASS #6656 =============================
7328: $ # Calculate some convenience variables.
7335: $ # Calculate some convenience variables.
*****************************************************************
========================= CLASS #6657 =============================
7329: $ export FILEURL=http://svn.example.com/projects/sandbox/README $ export BASEREV=`svn info ${FILEURL} | \ grep &#39;^Last Changed Rev&#39; | cut -d &#39; &#39; -f 2` $ # Get a copy of the file&#39;s current contents.
7336: $ export PROJURL=http://svn.example.com/projects/sandbox $ export BASEREV=`svn info ${PROJURL} | \ grep &#39;^Last Changed Rev&#39; | cut -d &#39; &#39; -f 2` $ # Get a copy of the directory&#39;s &quot;license&quot; property value.
*****************************************************************
========================= CLASS #6677 =============================
7359: --non-interactive In the case of an authentication failure or insufficient credentials, prevents prompting for credentials (e.g., username or password).
7450: --non-interactive In the case of an authentication failure or insufficient credentials, prevents prompting for credentials (e.g., username or password).
*****************************************************************
========================= CLASS #6678 =============================
7364: --revision ( -r ) ARG Used by svnsync copy-revprops to specify a particular revision or revision range on which to operate.
7453: --revision ( -r ) ARG Used by svnsync copy-revprops to specify a particular revision or revision range on which to operate.
*****************************************************************
========================= CLASS #6679 =============================
7365: --trust-server-cert Used with --non-interactive to accept any unknown SSL server certificates without prompting.
7465: --trust-server-cert Used with --non-interactive to accept any unknown SSL server certificates without prompting.
*****************************************************************
========================= CLASS #6690 =============================
7381: Options Examples Dump the contents of a local repository, and use svnrdump load to transfer that revision information into an existing remote repository: $ svnadmin dump -q /var/svn/repos/new-project | \ svnrdump load http://svn.example.com/repos/new-project * Loaded revision 0 * Loaded revision 1.
7382: * Loaded revision 2.
*****************************************************************
========================= CLASS #6697 =============================
7390: --cache-fulltexts ARG Toggles support for fulltext file content caching (in FSFS repositories only).
7391: --cache-txdeltas ARG Toggles support for file content delta caching (in FSFS repositories only).
*****************************************************************
========================= CLASS #6707 =============================
7401: This is mainly useful for debugging.
7406: This option is mainly useful for debugging.
*****************************************************************
========================= CLASS #6743 =============================
7454: --source-password PASSWD Specifies the password for the Subversion server from which you are syncing.
7457: --source-username NAME Specifies the username for the Subversion server from which you are syncing.
7461: --sync-password PASSWD Specifies the password for the Subversion server to which you are syncing.
7463: --sync-username NAME Specifies the username for the Subversion server to which you are syncing.
*****************************************************************
========================= CLASS #6752 =============================
7472: When SOURCE_URL is provided, svnsync will use it as the repository URL which the destination repository is mirroring.
7495: When SOURCE_URL is provided, svnsync will use it as the repository URL which the destination repository is mirroring.
*****************************************************************
========================= CLASS #6753 =============================
7473: Generally, SOURCE_URL will be exactly the same source URL as was used with the svnsync initialize command when the mirror was first set up.
7496: Generally, SOURCE_URL will be exactly the same source URL as was used with the svnsync initialize command when the mirror was first set up.
*****************************************************************
========================= CLASS #6754 =============================
7474: You may choose, however, to omit SOURCE_URL , in which case svnsync will consult the mirror repository&#39;s records to determine the source URL which should be used.
7497: You may choose, however, to omit SOURCE_URL , in which case svnsync will consult the mirror repository&#39;s records to determine the source URL which should be used.
*****************************************************************
========================= CLASS #6755 =============================
7475: We strongly recommend that you specify the source URL on the command-line, especially when untrusted users have write access to the revision 0 properties which svnsync uses to coordinate its efforts.
7498: We strongly recommend that you specify the source URL on the command-line, especially when untrusted users have write access to the revision 0 properties which svnsync uses to coordinate its efforts.
*****************************************************************
